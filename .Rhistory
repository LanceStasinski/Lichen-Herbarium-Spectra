install.packages("ape", "phytools", "rotl")
install.packages("Rtools")
install.packages("ape")
install.packages("ape")
install.packages("phytools")
install.package("rotl")
install.packages("rotl")
library("ape", "phytools", "rotl")
library("phytools")
library("rotl")
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree
plot(N_tree)
plot(N_tree)
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata", "Nephroma arcticum", "Nephroma helveticum",
"Nephroma isidiosum", "Collema aggregatum", "Collema coniophilum",
"Collema curtisporum")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree)
taxa_clean$ott_id
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata", "Nephroma arcticum", "Nephroma helveticum",
"Nephroma isidiosum", "Collema coniophilum",
"Collema curtisporum")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree)
library("ape")
library("phytools")
library("rotl")
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata", "Nephroma arcticum", "Nephroma helveticum",
"Nephroma isidiosum", "Collema coniophilum",
"Collema curtisporum")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree)
library("ape")
library("phytools")
library("rotl")
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata", "Nephroma arcticum", "Nephroma helveticum",
"Nephroma isidiosum", "Collema coniophilum",
"Collema curtisporum")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree)
120/13
17.5+19+17.5+12+13+12.5+3.5
9+3.75++6+8+1.25+4.25+.5
15.25+20.75+17.5+13.75+12.5+12.5+4.25
14+13.25+14+7.75+6+4.5+3.5
18+14.25+15.25+11.75+10.75+4.25+6
14.75+17.25+16.75+12+12.75+12+6.5
15.5+16.5+13+10+9.25+12+1.5
10.25+13.75+10.25+12+8.25+5.5+3
17.5+19+18+13+12+10.25+4.5
12.5+4.25+9.75+9.5+6+6.5+3
16.5+19.75+14+11+13.25+9.5+6
14.75+20.25+14+10+9.5+10.25+5
14.75+12.5+9.5+8+7+8.25+3.75
12.75+15+11.5+7.5+6.25+4.75+2.75
17+20.5+15+11.25+8.5+10.5+8
14.25+16+15.5+10.75+9.5+12+4.5+
0
10.25+3+6.25+9+3.5+7+4.25+
0
9.25+5.75+11.5+7+3
9.25+5.75+11.5+7+3.5+1.5+3
18+21+17+14+14+14+7
13.5+9.25+14+10.75+6.25+9.25+2.75
11.25+9.25+7.25+10+7.75+8.5+3.75
11.25+18.5+11+6+4.25+3.5
54.5+5.5
10.75+9+11.5+7.75+8.25+6.5+4
4.5+4.25+9.5+8+2.75+2.25+1.25
15.5+19.5+13+11+5.5+7+4.5
9+7.25+12.75+8+7+7.5+3
13+12.25+13.25+11.5+8+10+2
16+3.75+12.5+11.5+13+4+3.25
13.75+10.25+11.5+9.25+9+5.5+3.75
12+13+7.25+8.75+8.5+9+3
15.25+14.5+11.5+9+10.5+8+5
12.25+7+7.5+8.25+8+8+4.5
10+14+15.75+11+10.25+10.5+2.5
10.75+12.25+12+8.5+7+7.25+3.75
3+3+2+3+3+4+3+2+4+1+1+1+4+3
?subset
my.function = function(x,y){
x/y + 1
}
number = my.function(6,2)
number
i = 1077
m1 = 38
m2 = 2141
r1 = 214
m1 = 138
r2 = 605
r3 = 351
r4 = 139
r5 = 232
d = 1648
m = m1 + m2
r = r1 + r2 + r3 + r4 + r5
t = i + m + r + d
library(corrplot)
library(matrixStats)
library(naniar)
library(spectrolab)
################################################################################
#run plsda
################################################################################
spectra = readRDS('spectra/lichen_spectra.rds')
classify = readRDS("functions/plsda.rds")
pls = classify(spectra = spectra,
className = "scientificName",
ncomp = 32,
resampling = 'up',
n_iteration = 100,
include_age = TRUE)
saveRDS(pls, 'models/species_age.rds')
i = 963
m1 = 138
m2 = 1701
r1 = 208
r2 = 545
r3 = 318
r4 = 107
r5 = 232
d = 1437
r = r1 + r2 + r3 + r4 + r5
m = m1 + m2
t = i + m + r + d
s = 196
t
i
m
r
d
t
library(spectrolab)
library(lme4)
library(nlme)
library(ggplot2)
library(ggeffects)
library(sjPlot)
library(rlist)
library(optimx)
stats_list = readRDS('models/lmms/lmm_60yrs.rds')
setwd("~/GitHub/Lichen-Herbarium-Spectra")
stats_list = readRDS('models/lmms/lmm_60yrs.rds')
wv = seq(400, 2400, 1)
plot(wv, stats_list[[3]],
ylim = c(min(stats_list[[4]]), max(stats_list[[3]])),
main = 'Variance',
ylab = 'Variance',
xlab = 'Wavelength (nm)',
col = 'blue',
type = 'l')
lines(wv, stats_list[[4]], col = 'red')
lines(wv, stats_list[[5]], col = 'gray')
legend('bottomright',
c('Intercept', 'Slope', 'Residual'),
col = c('blue', 'red', 'gray'), lty = c(1,1,1))
plot(wv, stats_list[[4]], main = 'Slope variance', ylab = 'variance',
xlab = 'Wavelength (nm)')
plot(wv, stats_list[[4]], main = 'Slope variance', ylab = 'variance',
xlab = 'Wavelength (nm)', type = 'l')
lmm_varSlope = lmer(spec_df[, '2050'] ~ age + (age|Class/Order/Family/scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
lmm_varSlope = lmer(spec_df[, '2050'] ~ age + (age|Class/Order/Family/scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
lmm_varSlope = lmer(spec_df[, '2150'] ~ age + (age|Class/Order/Family/scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
lmm_varSlope = lmer(spec_df[, '2150'] ~ age + (age|Order/Family/scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
lmm_varSlope = lmer(spec_df[, '2250'] ~ age + (age|Order/Family/scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
lmm_varSlope = lmer(spec_df[, '1250'] ~ age + (age|Order/Family/scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
lmm_varSlope = lmer(spec_df[, '850'] ~ age + (age|Order/Family/scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
install.packages('minqa')
install.packages("minqa")
install.packages("minqa")
library(minqa)
library(tidyverse)
library(lme4)
library(optimx)
library(parallel)
library(minqa)
detectCores()
detectCores() - 4
#Prepare data
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
#model
lmm = lmer(spec_df[, '850'] ~ age + (age|Order/Family/scientificName),
data = spec_df)
#Run model with all optimizers
ncores <- detectCores() - 4
diff_optims <- allFit(lmm, maxfun = 1e5, parallel = 'multicore', ncpus = ncores)
#Output
is.OK <- sapply(diff_optims, is, "merMod")
diff_optims.OK <- diff_optims[is.OK]
lapply(diff_optims.OK,function(x) x@optinfo$conv$lme4$messages)
