xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'black', lwd = 2)
jpeg(filename = '../../lichen figures/normMag-age_allspecies_color.jpeg',
width = 9, height = 8, units = 'in', res = 1200)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'black', lwd = 2)
dev.off()
library(RColorBrewer)
col_pal = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, col_pal$maxcolors, rownames(col_pal)))
cols = sample(col_vector, 29)
spec_df$color = 'black'
species = sort(unique(spec_df$scientificName))
for (i in 1:length(species)) {
spec_df$color[spec_df$scientificName == species[i]] = cols[i]
}
coefs = coef(lmm)
jpeg(filename = '../../lichen figures/normMag-age_allspecies_color.jpeg',
width = 9, height = 8, units = 'in', res = 1200)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'black', lwd = 3)
dev.off()
#setup
################################################################################
library(spectrolab)
library(lme4)
library(nlme)
library(ggplot2)
library(ggeffects)
library(sjPlot)
library(rlist)
library(optimx)
library(forecast)
library(partR2)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, by = meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
range(spec_df$age)
#example
spectra = readRDS('spectra/lichen_spectra.rds')
range(meta(spectra)$age)
133-7
library(corrplot)
library(matrixStats)
library(naniar)
library(spectrolab)
pls = readRDS('models/species.rds')
cm.list = pls[[3]]
cm.avg = Reduce('+', cm.list)/100
cm.avg = t(cm.avg)
cm.total = cm.avg/rowSums(cm.avg)
cm.total = as.data.frame(cm.total)
cm.total = cm.total %>% replace_with_na_all(condition = ~.x == 0)
cm.total = as.matrix(cm.total)
rownames(cm.total) = rownames(as.matrix(cm.list[[1]]))
colnames(cm.total) = colnames(as.matrix(cm.list[[1]]))
cols = colorRampPalette(c('white', '#fe9929'))
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
col = cols(10))
?corrplot
corrplot::corrplot(as.matrix(cm.total),
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
number.digits = 2,
col = cols(10))
corrplot::corrplot(as.matrix(cm.total),
method = 'color',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
number.digits = 2,
col = cols(10))
corrplot::corrplot(as.matrix(cm.total),
method = 'shade',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
number.digits = 2,
col = cols(10))
corrplot::corrplot(as.matrix(cm.total),
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
number.digits = 2,
col = cols(10))
corrplot::corrplot(as.matrix(cm.total),
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
number.digits = 2,
number.cex = 1,
col = cols(10))
corrplot::corrplot(as.matrix(cm.total),
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = 1,
col = cols(10))
corrplot::corrplot(as.matrix(cm.total),
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .5
col = cols(10))
corrplot::corrplot(as.matrix(cm.total),
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .5,
col = cols(10))
corrplot::corrplot(as.matrix(cm.total),
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .75,
col = cols(10))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .75,
col = cols(10))
jpeg(filename = '../../lichen figures/species_corrplot.jpeg',
width = 10, height = 10, units = 'in', res = 1200)
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .75,
col = cols(10))
dev.off()
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .65,
col = cols(10))
dev.off()
jpeg(filename = '../../lichen figures/species_corrplot.jpeg',
width = 10, height = 10, units = 'in', res = 1200)
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .55,
col = cols(10))
dev.off()
jpeg(filename = '../../lichen figures/species_corrplot.jpeg',
width = 10, height = 10, units = 'in', res = 1200)
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .65,
col = cols(10))
dev.off()
pls = readRDS('models/family.rds')
cm.list = pls[[3]]
cm.avg = Reduce('+', cm.list)/100
cm.avg = t(cm.avg)
cm.total = cm.avg/rowSums(cm.avg)
cm.total = as.data.frame(cm.total)
cm.total = cm.total %>% replace_with_na_all(condition = ~.x == 0)
cm.total = as.matrix(cm.total)
rownames(cm.total) = rownames(as.matrix(cm.list[[1]]))
colnames(cm.total) = colnames(as.matrix(cm.list[[1]]))
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .65,
col = cols(10))
jpeg(filename = '../../lichen figures/family_corrplot.jpeg',
width = 10, height = 10, units = 'in', res = 1200)
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = .75,
col = cols(10))
dev.off()
jpeg(filename = '../../lichen figures/family_corrplot.jpeg',
width = 10, height = 10, units = 'in', res = 1200)
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = 1,
col = cols(10))
dev.off()
pls = readRDS('models/order.rds')
cm.list = pls[[3]]
cm.avg = Reduce('+', cm.list)/100
cm.avg = t(cm.avg)
cm.total = cm.avg/rowSums(cm.avg)
cm.total = as.data.frame(cm.total)
cm.total = cm.total %>% replace_with_na_all(condition = ~.x == 0)
cm.total = as.matrix(cm.total)
rownames(cm.total) = rownames(as.matrix(cm.list[[1]]))
colnames(cm.total) = colnames(as.matrix(cm.list[[1]]))
#plot confusion matrix
cols = colorRampPalette(c('white', '#fe9929'))
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = 1,
col = cols(10))
jpeg(filename = '../../lichen figures/order_corrplot.jpeg',
width = 10, height = 10, units = 'in', res = 1200)
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = 1,
col = cols(10))
dev.off()
pls = readRDS('models/class.rds')
#take average of confusion matrices, reorient matrix, change averages to
#proportions
cm.list = pls[[3]]
cm.avg = Reduce('+', cm.list)/100
cm.avg = t(cm.avg)
cm.total = cm.avg/rowSums(cm.avg)
#format matrix for plotting
cm.total = as.data.frame(cm.total)
cm.total = cm.total %>% replace_with_na_all(condition = ~.x == 0)
cm.total = as.matrix(cm.total)
rownames(cm.total) = rownames(as.matrix(cm.list[[1]]))
colnames(cm.total) = colnames(as.matrix(cm.list[[1]]))
#plot confusion matrix
cols = colorRampPalette(c('white', '#fe9929'))
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = 1,
col = cols(10))
jpeg(filename = '../../lichen figures/class_corrplot.jpeg',
width = 10, height = 10, units = 'in', res = 1200)
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = 1,
col = cols(10))
dev.off()
jpeg(filename = '../../lichen figures/class_corrplot.jpeg',
width = 6, height = 6, units = 'in', res = 1200)
par(mfrow = c(1,1))
corrplot::corrplot(as.matrix(cm.total),
cl.pos = 'n',
method = 'square',
tl.col = 'black',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addCoef.col = '#542788',
number.digits = 2,
number.cex = 1,
col = cols(10))
dev.off()
library(spectrolab)
library(lme4)
library(nlme)
library(ggplot2)
library(ggeffects)
library(sjPlot)
library(rlist)
library(optimx)
library(forecast)
library(partR2)
################################################################################
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
m = lm(normalization_magnitude ~ age, data = spec_df)
lmm = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
lmm2 = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
AIC(m)
AIC(lmm)
AIC(lmm2)
AIC(lmm) - AIC(lmm2)
################################################################################
#Brightness as a function of age
################################################################################
spectra = readRDS('spectra/lichen_spectra.rds')
table(meta(spectra)$scientificName)
mean_spec = aggregate(spectra, meta(spectra)$scientificName, mean, try_keep_txt(mean_spec))
d = meta(mean_spec)
View(d)
table(range(meta(spectra)$age)
)
library(spectrolab)
spec = readRDS("spectra/lichen_spectra.rds")
vn_spec = readRDS("spectra/lichen_spectra_vn.rds")
spec15 = spec[meta(spec)$age <= 15, ]
spec30_1 = spec[meta(spec)$age > 15, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec45_1 = spec[meta(spec)$age > 30, ]
spec45 = spec45_1[meta(spec45_1)$age <= 45,]
spec60_1 = spec[meta(spec)$age > 45, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec15), col = 'green')
plot(mean(spec30), col = 'darkgreen', add = T)
plot(mean(spec45), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
spec10 = spec[meta(spec)$age <= 10, ]
spec20_1 = spec[meta(spec)$age > 10, ]
spec20 = spec20_1[meta(spec20_1)$age <= 20,]
spec30_1 = spec[meta(spec)$age > 20, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec40_1 = spec[meta(spec)$age > 30, ]
spec40 = spec40_1[meta(spec40_1)$age <= 40,]
spec50_1 = spec[meta(spec)$age > 40, ]
spec50 = spec50_1[meta(spec50_1)$age <= 50,]
spec60_1 = spec[meta(spec)$age > 50, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec10), col = 'green')
plot(mean(spec20), col = 'darkgreen', add = T)
plot(mean(spec30), col = 'darkseagreen', add = T)
plot(mean(spec40), col = 'burlywood', add = T)
plot(mean(spec50), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
spec20 = spec[meta(spec)$age <= 20, ]
spec40_1 = spec[meta(spec)$age > 20, ]
spec40 = spec40_1[meta(spec40_1)$age <= 40,]
spec60_1 = spec[meta(spec)$age > 20, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec20), col = 'green')
plot(mean(spec40), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
spec_f = spec[meta(spec)$scientificName == 'Flavoparmelia_caperata',]
spec_f = spec_f[meta(spec_f)$age < 60, ]
spec15 = spec_f[meta(spec_f)$age <= 15, ]
spec30_1 = spec_f[meta(spec_f)$age > 15, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec45_1 = spec_f[meta(spec_f)$age > 30, ]
spec45 = spec45_1[meta(spec45_1)$age <= 45,]
spec60_1 = spec_f[meta(spec_f)$age > 45, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec15), col = 'green')
plot(mean(spec30), col = 'darkgreen', add = T)
plot(mean(spec45), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
table(meta(spec)$scientificName)
#Caloplaca flavovirescens
spec_c = spec[meta(spec)$scientificName == 'Caloplaca_flavovirescens',]
spec_c = spec_c[meta(spec_c)$age < 60, ]
spec15 = spec_c[meta(spec_c)$age <= 15, ]
spec30_1 = spec_c[meta(spec_c)$age > 15, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec45_1 = spec_c[meta(spec_c)$age > 30, ]
spec45 = spec45_1[meta(spec45_1)$age <= 45,]
spec60_1 = spec_c[meta(spec_c)$age > 45, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec15), col = 'green')
plot(mean(spec30), col = 'darkgreen', add = T)
plot(mean(spec45), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
spec_l = spec[meta(spec)$scientificName == 'Loxospora_elatina',]
spec_l = spec_l[meta(spec_l)$age < 60, ]
spec15 = spec_l[meta(spec_l)$age <= 15, ]
spec30_1 = spec_l[meta(spec_l)$age > 15, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec45_1 = spec_l[meta(spec_l)$age > 30, ]
spec45 = spec45_1[meta(spec45_1)$age <= 45,]
spec60_1 = spec_l[meta(spec_l)$age > 45, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec15), col = 'green')
plot(mean(spec30), col = 'darkgreen', add = T)
plot(mean(spec45), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
#Chrysothrix_candelaris
spec_ch = spec[meta(spec)$scientificName == 'Chrysothrix_candelaris',]
spec_ch = spec_ch[meta(spec_ch)$age < 60, ]
spec15 = spec_ch[meta(spec_ch)$age <= 15, ]
spec30_1 = spec_ch[meta(spec_ch)$age > 15, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec45_1 = spec_ch[meta(spec_ch)$age > 30, ]
spec45 = spec45_1[meta(spec45_1)$age <= 45,]
spec60_1 = spec_ch[meta(spec_ch)$age > 45, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec15), col = 'green')
plot(mean(spec30), col = 'darkgreen', add = T)
plot(mean(spec45), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
