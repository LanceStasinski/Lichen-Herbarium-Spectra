par(mfrow = c(3,1))
plot(lm550, 2)
plot(lm850, 2)
plot(lm1550, 2)
par(mfrow = c(3,1))
plot(lm550, 3)
plot(lm850, 3)
plot(lm1550, 3)
library(lme4)
varInt550 = lmer(spec_df[, '550'] ~ age + (1|scientificName),
data = spec_df, REML = T)
varSlope550 = lmer(spec_df[, '550'] ~ age + (1+age|scientificName),
data = spec_df, REML = T)
anova(varInt550, varSlope550)
library(lme4)
varInt550 = lmer(spec_df[, '550'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope550 = lmer(spec_df[, '550'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5))))
library(lme4)
varInt550 = lmer(spec_df[, '550'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope550 = lmer(spec_df[, '550'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varInt550, varSlope550)
library(lme4)
varInt850 = lmer(spec_df[, '850'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope850 = lmer(spec_df[, '850'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varInt850, varSlope850)
library(lme4)
varInt1550 = lmer(spec_df[, '1550'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope1550 = lmer(spec_df[, '1550'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varInt1550, varSlope1550)
varSlope1550 = lmer(spec_df[, '1550'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varInt1550 = lmer(spec_df[, '1550'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varInt850 = lmer(spec_df[, '850'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
?isSingular
plot(resid(varInt550), spec_df[, '700])
plot(resid(varInt550), spec_df[, '700'])
plot(resid(varInt550), spec_df[, '550'])
par(mfrow = c(3,1))
plot(resid(varInt550), spec_df[, '550'])
plot(resid(varInt850), spec_df[, '850'])
plot(resid(varInt1550), spec_df[, '1550'])
plot(resid(varInt550), spec_df[, '550'])
plot(resid(varInt550), spec_df[, '550'])
plot(resid(varInt850), spec_df[, '850'])
plot(resid(varInt550), spec_df[, '1550'])
plot(resid(varInt550), spec_df[, '1550'])
plot(varInt550)
plot(varInt850)
plot(varInt1550)
spectra = spectra[meta(spectra)$age < 60,]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean)) #X indicates individual thallus
data = meta(spectra)
spec.m = as.matrix(spectra) * 100 #convert reflectance to a percentage to help with interpretation
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
library(spectrolab)
library(dplyr)
spectra = readRDS('spectra/lichen_spectra.rds')
spec_df = as.data.frame(spectra)
spec_df %>% count(scientificName)
hist(spec_df$age, main = 'Frequency of measurements vs thallus age', xlab = 'Age (years)')
spec_df = spec_df[spec_df$age <= 60, ]
hist(spec_df$age, main = 'Frequency of measurements vs thallus age', xlab = 'Age (years)')
spectra = spectra[meta(spectra)$age < 60,]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean)) #X indicates individual thallus
data = meta(spectra)
spec.m = as.matrix(spectra) * 100 #convert reflectance to a percentage to help with interpretation
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
lm550 = lm(spec_df[, '550'] ~ spec_df$age)
lm850 = lm(spec_df[, '850'] ~ spec_df$age)
lm1550 = lm(spec_df[, '1550'] ~ spec_df$age)
par(mfrow = c(3,1))
plot(spec_df$age, spec_df[, '550'], main = '550', ylab = 'Reflectance (nm)', xlab = 'Age (years)')
abline(lm550)
plot(spec_df$age, spec_df[, '850'], main = '850', ylab = 'Reflectance (nm)', xlab = 'Age (years)')
abline(lm850)
plot(spec_df$age, spec_df[, '1550'], main = '1550', ylab = 'Reflectance (nm)', xlab = 'Age (years)')
abline(lm1550)
par(mfrow = c(3,1))
plot(lm550, 1)
plot(lm850, 1)
plot(lm1550, 1)
par(mfrow = c(3,1))
plot(lm550, 2)
plot(lm850, 2)
plot(lm1550, 2)
par(mfrow = c(3,1))
plot(lm550, 3)
plot(lm850, 3)
plot(lm1550, 3)
library(lme4)
varInt550 = lmer(spec_df[, '550'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope550 = lmer(spec_df[, '550'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varInt550, varSlope550)
library(lme4)
varInt850 = lmer(spec_df[, '850'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope850 = lmer(spec_df[, '850'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varInt850, varSlope850)
library(lme4)
varInt1550 = lmer(spec_df[, '1550'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope1550 = lmer(spec_df[, '1550'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varInt1550, varSlope1550)
plot(resid(varInt550), spec_df[, '550'])
plot(resid(varInt850), spec_df[, '850'])
plot(resid(varInt550), spec_df[, '1550'])
plot(varInt550)
plot(varInt850)
plot(varInt1550)
library(lattice)
qqmath(varInt550, id=0.05)
library(lattice)
qqmath(varInt550)
library(lattice)
par(mfrow = c(3,1))
qqmath(varInt550)
qqmath(varInt850)
qqmath(varInt1550)
setwd("~/GitHub/Lichen-Herbarium-Spectra")
lm550 = lm(spec_df[, '550'] ~ spec_df$age)
lm850 = lm(spec_df[, '850'] ~ spec_df$age)
lm1550 = lm(spec_df[, '1550'] ~ spec_df$age)
plot(spec_df$age, spec_df[, '550'], main = '550', ylab = 'Reflectance (nm)', xlab = 'Age (years)')
abline(lm550)
plot(spec_df$age, spec_df[, '850'], main = '850', ylab = 'Reflectance (nm)', xlab = 'Age (years)')
abline(lm850)
plot(spec_df$age, spec_df[, '1550'], main = '1550', ylab = 'Reflectance (nm)', xlab = 'Age (years)')
abline(lm1550)
plot(lm550, 3)
plot(lm850, 3)
plot(lm1550, 3)
plot(lm550, 2)
plot(lm850, 2)
plot(lm1550, 2)
plot(lm550, 1)
plot(lm850, 1)
plot(lm1550, 1)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/GitHub/Lichen-Herbarium-Spectra")
library(spectrolab)
library(dplyr)
spectra = readRDS('spectra/lichen_spectra.rds')
spec_df = as.data.frame(spectra)
spec_df %>% count(scientificName)
hist(spec_df$age, main = 'Frequency of measurements vs thallus age', xlab = 'Age (years)')
spec_df = spec_df[spec_df$age <= 60, ]
hist(spec_df$age, main = 'Frequency of measurements vs thallus age', xlab = 'Age (years)')
spectra = spectra[meta(spectra)$age < 60,]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean)) #X indicates individual thallus
data = meta(spectra)
spec.m = as.matrix(spectra) * 100 #convert reflectance to a percentage to help with interpretation
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
lm550 = lm(spec_df[, '550'] ~ spec_df$age)
lm850 = lm(spec_df[, '850'] ~ spec_df$age)
lm1550 = lm(spec_df[, '1550'] ~ spec_df$age)
plot(spec_df$age, spec_df[, '550'], main = '550', ylab = 'Reflectance (nm)', xlab = 'Age (years)')
abline(lm550)
plot(spec_df$age, spec_df[, '850'], main = '850', ylab = 'Reflectance (nm)', xlab = 'Age (years)')
abline(lm850)
plot(spec_df$age, spec_df[, '1550'], main = '1550', ylab = 'Reflectance (nm)', xlab = 'Age (years)')
abline(lm1550)
plot(lm550, 1)
plot(lm850, 1)
plot(lm1550, 1)
plot(lm550, 2)
plot(lm850, 2)
plot(lm1550, 2)
plot(lm550, 3)
plot(lm850, 3)
plot(lm1550, 3)
library(lme4)
varInt550 = lmer(spec_df[, '550'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope550 = lmer(spec_df[, '550'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varInt550, varSlope550)
library(lme4)
varInt850 = lmer(spec_df[, '850'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope850 = lmer(spec_df[, '850'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varInt850, varSlope850)
library(lme4)
varInt1550 = lmer(spec_df[, '1550'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', #prevents convergence error
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope1550 = lmer(spec_df[, '1550'] ~ age + (1+age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa',
boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varInt1550, varSlope1550)
plot(resid(varInt550), spec_df[, '550'])
plot(resid(varInt850), spec_df[, '850'])
plot(resid(varInt550), spec_df[, '1550'])
plot(varInt550)
plot(varInt850)
plot(varInt1550)
library(lattice)
qqmath(varInt550)
qqmath(varInt850)
qqmath(varInt1550)
plot(resid(varInt550), spec_df[, '550'])
plot(resid(varInt850), spec_df[, '850'])
plot(resid(varInt550), spec_df[, '1550'])
plot(varInt550)
plot(varInt850)
plot(varInt1550)
plot(resid(varSlope550), spec_df[, '550'])
plot(resid(varSlope850), spec_df[, '850'])
plot(resid(varSlope550), spec_df[, '1550'])
plot(varSlope550)
plot(varSlope850)
plot(varSlope1550)
library(lattice)
qqmath(varInt550)
qqmath(varInt850)
qqmath(varInt1550)
summary(varSlope550)
x = sum(23.35346, 0.00152, 64.59452)
64.59452/x
coef(varSlope550)
summary(lmer(spec_df[, '550'] ~ age + (1 + age|Class) + (1 + age|Class:Order) + (1 +         age|Class:Order:Family) + (1 + age|Class:Order:Family:scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5))))
summary(lmer(spec_df[, '550'] ~ age + (1 + age|Class) + (1 + age|Order) + (1 + age|Family) + (1 +age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5))))
library(spectrolab)
library(lme4)
library(nlme)
library(ggplot2)
library(ggeffects)
library(sjPlot)
library(rlist)
library(optimx)
library(forecast)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
varInt_aic = c()
varSlope_aic = c()
varInt_bic = c()
varSlope_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
varInt = lmer(spec_df[, x] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varInt_aic = append(varInt_aic, AIC(varInt))
varInt_bic = append(varInt_bic, BIC(varInt))
varSlope = lmer(spec_df[, x] ~ age + (age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope_aic = append(varSlope_aic, AIC(varSlope))
varSlope_bic = append(varSlope_bic, BIC(varSlope))
}
wv = seq(400, 2400, 10)
plot(wv, varInt_aic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC')
lines(wv, varSlope_aic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
plot(wv, varInt_bic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC')
lines(wv, varSlope_bic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
varInt_aic = c()
varSlope_aic = c()
varInt_bic = c()
varSlope_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
varInt = lmer(spec_df[, x] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varInt_aic = append(varInt_aic, AIC(varInt))
varInt_bic = append(varInt_bic, BIC(varInt))
varSlope = lmer(spec_df[, x] ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope_aic = append(varSlope_aic, AIC(varSlope))
varSlope_bic = append(varSlope_bic, BIC(varSlope))
}
wv = seq(400, 2400, 10)
plot(wv, varInt_aic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC')
lines(wv, varSlope_aic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
plot(wv, varInt_bic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC')
lines(wv, varSlope_bic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
varSlope = lmer(spec_df[, '550'] ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varInt = lmer(spec_df[, '550'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
anova(varSlope, varInt)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
varInt_aic = c()
varSlope_aic = c()
varInt_bic = c()
varSlope_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
varInt = lmer(spec_df[, x] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varInt_aic = append(varInt_aic, AIC(varInt))
varInt_bic = append(varInt_bic, BIC(varInt))
varSlope = lmer(spec_df[, x] ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope_aic = append(varSlope_aic, AIC(varSlope))
varSlope_bic = append(varSlope_bic, BIC(varSlope))
}
wv = seq(400, 2400, 10)
plot(wv, varInt_aic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC')
lines(wv, varSlope_aic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
plot(wv, varInt_bic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'BIC')
lines(wv, varSlope_bic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
tiff(filename = 'figures/paper-figures/aic_comparison.tif',
width = 8, height = 6, units = 'in', res = 1200)
wv = seq(400, 2400, 10)
plot(wv, varInt_aic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC')
lines(wv, varSlope_aic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
dev.off()
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = normalize(spectra[meta(spectra)$age <= 60, ])
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
varInt_aic = c()
varSlope_aic = c()
varInt_bic = c()
varSlope_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
varInt = lmer(spec_df[, x] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varInt_aic = append(varInt_aic, AIC(varInt))
varInt_bic = append(varInt_bic, BIC(varInt))
varSlope = lmer(spec_df[, x] ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope_aic = append(varSlope_aic, AIC(varSlope))
varSlope_bic = append(varSlope_bic, BIC(varSlope))
}
#tiff(filename = 'figures/paper-figures/aic_comparison.tif',
#width = 8, height = 6, units = 'in', res = 1200)
wv = seq(400, 2400, 10)
plot(wv, varInt_aic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC')
lines(wv, varSlope_aic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
#dev.off()
plot(wv, varInt_bic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'BIC')
lines(wv, varSlope_bic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
data
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = normalize(spectra[meta(spectra)$age <= 60, ])
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
varInt_aic = c()
varSlope_aic = c()
varInt_bic = c()
varSlope_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
varInt = lmer(spec_df[, x] ~ age + normalization_magnitude + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varInt_aic = append(varInt_aic, AIC(varInt))
varInt_bic = append(varInt_bic, BIC(varInt))
varSlope = lmer(spec_df[, x] ~ age + normalization_magnitude + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
varSlope_aic = append(varSlope_aic, AIC(varSlope))
varSlope_bic = append(varSlope_bic, BIC(varSlope))
}
#tiff(filename = 'figures/paper-figures/aic_comparison.tif',
#width = 8, height = 6, units = 'in', res = 1200)
wv = seq(400, 2400, 10)
plot(wv, varInt_aic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC')
lines(wv, varSlope_aic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
#dev.off()
plot(wv, varInt_bic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'BIC')
lines(wv, varSlope_bic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
tiff(filename = 'figures/paper-figures/aic_comparison-vn-plusMagnitude.tif',
width = 8, height = 6, units = 'in', res = 1200)
wv = seq(400, 2400, 10)
plot(wv, varInt_aic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC')
lines(wv, varSlope_aic, col = 'red')
legend('bottomright',
c('variable intercept', 'variable slope'),
col = c('blue', 'red'), lty = c(1,1))
dev.off()
summary(varInt)
