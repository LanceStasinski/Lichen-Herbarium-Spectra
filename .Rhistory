install.packages("ape", "phytools", "rotl")
install.packages("Rtools")
install.packages("ape")
install.packages("ape")
install.packages("phytools")
install.package("rotl")
install.packages("rotl")
library("ape", "phytools", "rotl")
library("phytools")
library("rotl")
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree
plot(N_tree)
plot(N_tree)
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata", "Nephroma arcticum", "Nephroma helveticum",
"Nephroma isidiosum", "Collema aggregatum", "Collema coniophilum",
"Collema curtisporum")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree)
taxa_clean$ott_id
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata", "Nephroma arcticum", "Nephroma helveticum",
"Nephroma isidiosum", "Collema coniophilum",
"Collema curtisporum")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree)
library("ape")
library("phytools")
library("rotl")
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata", "Nephroma arcticum", "Nephroma helveticum",
"Nephroma isidiosum", "Collema coniophilum",
"Collema curtisporum")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree)
library("ape")
library("phytools")
library("rotl")
taxa_raw = c("Peltigera canina", "Peltigera rufescens", "Peltigera apthosa",
"Lobaria pulmonaria", "Lobaria quercizans", "Lobaria oregana",
"Cladonia fimbriata", "Nephroma arcticum", "Nephroma helveticum",
"Nephroma isidiosum", "Collema coniophilum",
"Collema curtisporum")
taxa_clean = tnrs_match_names(taxa_raw)
N_tree = tol_induced_subtree(ott_ids = taxa_clean$ott_id)
plot(N_tree)
120/13
17.5+19+17.5+12+13+12.5+3.5
9+3.75++6+8+1.25+4.25+.5
15.25+20.75+17.5+13.75+12.5+12.5+4.25
14+13.25+14+7.75+6+4.5+3.5
18+14.25+15.25+11.75+10.75+4.25+6
14.75+17.25+16.75+12+12.75+12+6.5
15.5+16.5+13+10+9.25+12+1.5
10.25+13.75+10.25+12+8.25+5.5+3
17.5+19+18+13+12+10.25+4.5
12.5+4.25+9.75+9.5+6+6.5+3
16.5+19.75+14+11+13.25+9.5+6
14.75+20.25+14+10+9.5+10.25+5
14.75+12.5+9.5+8+7+8.25+3.75
12.75+15+11.5+7.5+6.25+4.75+2.75
17+20.5+15+11.25+8.5+10.5+8
14.25+16+15.5+10.75+9.5+12+4.5+
0
10.25+3+6.25+9+3.5+7+4.25+
0
9.25+5.75+11.5+7+3
9.25+5.75+11.5+7+3.5+1.5+3
18+21+17+14+14+14+7
13.5+9.25+14+10.75+6.25+9.25+2.75
11.25+9.25+7.25+10+7.75+8.5+3.75
11.25+18.5+11+6+4.25+3.5
54.5+5.5
10.75+9+11.5+7.75+8.25+6.5+4
4.5+4.25+9.5+8+2.75+2.25+1.25
15.5+19.5+13+11+5.5+7+4.5
9+7.25+12.75+8+7+7.5+3
13+12.25+13.25+11.5+8+10+2
16+3.75+12.5+11.5+13+4+3.25
13.75+10.25+11.5+9.25+9+5.5+3.75
12+13+7.25+8.75+8.5+9+3
15.25+14.5+11.5+9+10.5+8+5
12.25+7+7.5+8.25+8+8+4.5
10+14+15.75+11+10.25+10.5+2.5
10.75+12.25+12+8.5+7+7.25+3.75
3+3+2+3+3+4+3+2+4+1+1+1+4+3
?subset
my.function = function(x,y){
x/y + 1
}
number = my.function(6,2)
number
i = 1077
m1 = 38
m2 = 2141
r1 = 214
m1 = 138
r2 = 605
r3 = 351
r4 = 139
r5 = 232
d = 1648
m = m1 + m2
r = r1 + r2 + r3 + r4 + r5
t = i + m + r + d
library(corrplot)
library(matrixStats)
library(naniar)
library(spectrolab)
################################################################################
#run plsda
################################################################################
spectra = readRDS('spectra/lichen_spectra.rds')
classify = readRDS("functions/plsda.rds")
pls = classify(spectra = spectra,
className = "scientificName",
ncomp = 32,
resampling = 'up',
n_iteration = 100,
include_age = TRUE)
saveRDS(pls, 'models/species_age.rds')
i = 963
m1 = 138
m2 = 1701
r1 = 208
r2 = 545
r3 = 318
r4 = 107
r5 = 232
d = 1437
r = r1 + r2 + r3 + r4 + r5
m = m1 + m2
t = i + m + r + d
s = 196
t
i
m
r
d
t
setwd("~/GitHub")
setwd("~/GitHub/Lichen-Herbarium-Spectra")
#Linear Mixed Models
################################################################################
#setup
################################################################################
library(spectrolab)
library(lme4)
library(nlme)
library(ggplot2)
library(ggeffects)
library(sjPlot)
library(rlist)
library(optimx)
################################################################################
#Report desired statistics from all wavelengths
################################################################################
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spec_df = as.data.frame(spectra)
spec_df$age = scale(spec_df$age, center = TRUE, scale = TRUE)
varSlope_aic = c()
fixedSlope_aic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
lmm_varSlope = lmer(spec_df[, x] ~ age + (age|Class/Order/scientificName), data = spec_df, REML = T,
lmerControl(optimizer = 'Nelder_Mead'))
lmm_fixedSlope = lmer(spec_df[, x] ~ age + (1|Class/Order/scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer = 'Nelder_Mead'))
varSlope_aic = append(varSlope_aic, AIC(lmm_varSlope))
fixedSlope_aic = append(fixedSlope_aic, AIC(lmm_fixedSlope))
}
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spec_df = as.data.frame(spectra)
spec_df$age = scale(spec_df$age, center = TRUE, scale = TRUE)
varSlope_aic = c()
fixedSlope_aic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
lmm_varSlope = lmer(spec_df[, x] ~ age + (age|Class/Order/scientificName), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
lmm_fixedSlope = lmer(spec_df[, x] ~ age + (1|Class/Order/scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
varSlope_aic = append(varSlope_aic, AIC(lmm_varSlope))
fixedSlope_aic = append(fixedSlope_aic, AIC(lmm_fixedSlope))
}
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spec_df = as.data.frame(spectra)
spec_df$age = scale(spec_df$age, center = TRUE, scale = TRUE)
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|Class/Order/scientificName), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
summary(lmm_varSlope)
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|Class), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
summary(lmm_varSlope)
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|Order), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
summary(lmm_varSlope)
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|Family), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
summary(lmm_varSlope)
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|Family/scientificName), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
summary(lmm_varSlope)
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|scientificName), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|scientificName), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
summary(lmm_varSlope)
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|Class/Order/Family), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
summary(lmm_varSlope)
stats_list = readRDS('models/lmms/lmm_60yrs.rds')
stats_list[[5]]
slopes = stats_list[[5]]
stats_list
slopes = stats_list[[6]]
View(slopes)
plot(slopes)
plot(slopes)
plot(slopes)
plot(as.spectra(slopes))
plot(as_spectra(slopes))
plot(slopes[1,])
plot(as_spectra(slopes[1,]))
lines(as_spectra(slopes[2,]))
plot(wv, slopes[1,])
wv = seq(400, 2400, 1)
wv = seq(400, 2400, 1)
plot(wv, slopes[1,])
lines(wv, slopes[2,])
lines(wv, stats_list[[3]])
par(mfrow = c(1,1))
wv = seq(400, 2400, 1)
plot(wv, stats_list[[3]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = 'Effect of age (age/scaled(wavelength))',
ylim = c(min(stats_list[[5]]), max(stats_list[[4]])))
polygon(c(wv, rev(wv)), c(stats_list[[4]], rev(stats_list[[5]])),
col = 'grey80',
lty = 0)
for (i in 1:nrow(slopes)){
lines(wv, slopes[i,], col = 'grey' )
}
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[3]])
max(slopes)
min(slopes)
par(mfrow = c(1,1))
wv = seq(400, 2400, 1)
plot(wv, stats_list[[3]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = 'Effect of age (age/scaled(wavelength))',
ylim = c(min(stats_list[[5]]), max(stats_list[[6]])))
polygon(c(wv, rev(wv)), c(stats_list[[4]], rev(stats_list[[5]])),
col = 'grey80',
lty = 0)
for (i in 1:nrow(slopes)){
lines(wv, slopes[i,], col = 'grey' )
}
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[3]])
?ranef
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|Class/Order/Family), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
?isSingular
summary(lmm_varSlope)
################################################################################
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spec_df = as.data.frame(spectra)
table(spec_df$Class)
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|Class/Order/Family), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
lmm_varSlope = lmer(spec_df[, '700'] ~ age + (age|Class/Order/Family), data = spec_df, REML = T,
lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb')))
stats_list = readRDS('models/lmms/lmm_60yrs.rds')
slopes = stats_list[[6]]
par(mfrow = c(1,1))
wv = seq(400, 2400, 1)
plot(wv, stats_list[[3]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = 'Effect of age (age/scaled(wavelength))',
ylim = c(min(stats_list[[5]]), max(stats_list[[6]])))
polygon(c(wv, rev(wv)), c(stats_list[[4]], rev(stats_list[[5]])),
col = 'grey80',
lty = 0)
#for (i in 1:nrow(slopes)){
#lines(wv, slopes[i,], col = 'grey' )
#}
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[3]])
library(spectrolab)
spec = readRDS("spectra/lichen_spectra.rds")
spec10 = spec[meta(spec)$age <= 10, ]
spec20 = spec[meta(spec)$age > 10 && meta(spec)$age <= 20, ]
spec20 = spec[meta(spec)$age > 10, ] && spec[meta(spec)$age <= 20,]
spec20_1 = spec[meta(spec)$age > 10, ]
spec20 = spec20_1[meta(spec20_1)$age <= 20,]
spec30_1 = spec[meta(spec)$age > 20, ]
spec10 = spec[meta(spec)$age <= 10, ]
spec20_1 = spec[meta(spec)$age > 10, ]
spec20 = spec20_1[meta(spec20_1)$age <= 20,]
spec30_1 = spec[meta(spec)$age > 20, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec40_1 = spec[meta(spec)$age > 30, ]
spec40 = spec40_1[meta(spec40_1)$age <= 40,]
spec50_1 = spec[meta(spec)$age > 40, ]
spec50 = spec50_1[meta(spec50_1)$age <= 50,]
spec60_1 = spec[meta(spec)$age > 50, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec10), col = 'darkgreen')
lines(mean(spec20), col = 'green')
lines(mean(spec30), col = 'darkseagreen')
lines(mean(spec40), col = 'burlywood')
lines(mean(spec50), col = 'brown')
lines(mean(spec60), col = 'gray')
plot(mean(spec20), col = 'green', add = T)
plot(mean(spec10), col = 'darkgreen')
plot(mean(spec20), col = 'green', add = T)
plot(mean(spec30), col = 'darkseagreen', add = T)
plot(mean(spec40), col = 'burlywood', add = T)
plot(mean(spec50), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
spec20 = spec[meta(spec)$age <= 20, ]
spec40_1 = spec[meta(spec)$age > 20, ]
spec40 = spec40_1[meta(spec40_1)$age <= 40,]
spec60_1 = spec[meta(spec)$age > 20, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec20), col = 'green')
plot(mean(spec40), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
# 15 years
spec15 = spec[meta(spec)$age <= 15, ]
spec30_1 = spec[meta(spec)$age > 15, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec45_1 = spec[meta(spec)$age > 30, ]
spec45 = spec45_1[meta(spec45_1)$age <= 45,]
spec60_1 = spec[meta(spec)$age > 45, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec15), col = 'green')
plot(mean(spec30), col = 'darkgreen', add = T)
plot(mean(spec45), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
table(meta(spec)$scientificName)
# Flavoparmelia caperata
spec_f = spec[meta(spec)$scientificName = 'Flavoparmelia_caperata',]
# Flavoparmelia caperata
spec_f = spec[meta(spec)$scientificName == 'Flavoparmelia_caperata',]
hist(meta(spec_f)$age)
spec_f = spec_f[meta(spec_f)$age < 60, ]
hist(meta(spec_f)$age)
# Flavoparmelia caperata
spec_f = spec[meta(spec)$scientificName == 'Flavoparmelia_caperata',]
spec_f = spec_f[meta(spec_f)$age < 60, ]
spec15 = spec[meta(spec_f)$age <= 15, ]
spec30_1 = spec[meta(spec_f)$age > 15, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec45_1 = spec[meta(spec_f)$age > 30, ]
spec45 = spec45_1[meta(spec45_1)$age <= 45,]
spec60_1 = spec[meta(spec_f)$age > 45, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec15), col = 'green')
plot(mean(spec30), col = 'darkgreen', add = T)
plot(mean(spec45), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
spec_f = spec[meta(spec)$scientificName == 'Flavoparmelia_caperata',]
spec_f = spec_f[meta(spec_f)$age < 60, ]
spec15 = spec_f[meta(spec_f)$age <= 15, ]
spec30_1 = spec_f[meta(spec_f)$age > 15, ]
spec30 = spec30_1[meta(spec30_1)$age <= 30,]
spec45_1 = spec_f[meta(spec_f)$age > 30, ]
spec45 = spec45_1[meta(spec45_1)$age <= 45,]
spec60_1 = spec_f[meta(spec_f)$age > 45, ]
spec60 = spec60_1[meta(spec60_1)$age <= 60,]
plot(mean(spec15), col = 'green')
plot(mean(spec30), col = 'darkgreen', add = T)
plot(mean(spec45), col = 'brown', add = T)
plot(mean(spec60), col = 'gray', add = T)
