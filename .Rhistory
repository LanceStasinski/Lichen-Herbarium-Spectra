wv = seq(400, 2400, 10)
plot(wv, aic_dif, type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC',
main = 'No normalization magnitude AIC minus with normalization magnitude AIC')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
dev.off()
plot(wv, m1_bic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'BIC')
lines(wv, m2_bic, col = 'red')
legend('bottomright',
c('M1', 'M2'),
col = c('blue', 'red'), lty = c(1,1))
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
vn_spectra = normalize(spectra)
spec_df = as.data.frame(spectra)
spec_df$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
m1_aic = c()
m2_aic = c()
m1_bic = c()
m2_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
m1 = lmer(spec_df[, x] ~ age + normalization_magnitude (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m1_aic = append(m1_aic, AIC(m1))
m1_bic = append(m1_bic, BIC(m1))
m2 = lmer(spec_df[, x] ~ age + normalization_magnitude + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m2_aic = append(m2_aic, AIC(m2))
m2_bic = append(m2_bic, BIC(m2))
}
aic_dif = m1_aic - m2_aic
for(i in seq(400, 2400, 10)) {
x = toString(i)
m1 = lmer(spec_df[, x] ~ age + normalization_magnitude + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m1_aic = append(m1_aic, AIC(m1))
m1_bic = append(m1_bic, BIC(m1))
m2 = lmer(spec_df[, x] ~ age + normalization_magnitude + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m2_aic = append(m2_aic, AIC(m2))
m2_bic = append(m2_bic, BIC(m2))
}
aic_dif = m1_aic - m2_aic
wv = seq(400, 2400, 10)
plot(wv, aic_dif, type = 'l', xlab = 'Wavelength (nm)', ylab = 'AIC',
main = 'No normalization magnitude AIC minus with normalization magnitude AIC')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
wv = seq(400, 2400, 10)
plot(wv, aic_dif, type = 'l', xlab = 'Wavelength (nm)', ylab = '▲AIC',
main = 'Fixed-slope AIC minus Variable-slope AIC')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
wv = seq(400, 2400, 10)
plot(wv, aic_dif, type = 'l', xlab = 'Wavelength (nm)', ylab = '∆AIC',
main = 'Fixed-slope AIC minus Variable-slope AIC')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
jpeg(filename = '../../lichen figures/aic_fixed-slope_minus_variable-slope_norm-mag.jpeg',
width = 8, height = 6, units = 'in', res = 1200)
wv = seq(400, 2400, 10)
plot(wv, aic_dif, type = 'l', xlab = 'Wavelength (nm)', ylab = '∆AIC',
main = 'Fixed-slope AIC minus Variable-slope AIC')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
dev.off()
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
vn_spectra = normalize(spectra)
spec_df = as.data.frame(spectra)
spec_df$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
m1_aic = c()
m2_aic = c()
m1_bic = c()
m2_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
m1 = lmer(spec_df[, x] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m1_aic = append(m1_aic, AIC(m1))
m1_bic = append(m1_bic, BIC(m1))
m2 = lmer(spec_df[, x] ~ age + normalization_magnitude + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m2_aic = append(m2_aic, AIC(m2))
m2_bic = append(m2_bic, BIC(m2))
}
aic_dif = m1_aic - m2_aic
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
vn_spectra = normalize(spectra)
spec_df = as.data.frame(spectra)
spec_df$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
m1_aic = c()
m2_aic = c()
m1_bic = c()
m2_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
m1 = lmer(spec_df[, x] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m1_aic = append(m1_aic, AIC(m1))
m1_bic = append(m1_bic, BIC(m1))
m2 = lmer(spec_df[, x] ~ age + normalization_magnitude + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m2_aic = append(m2_aic, AIC(m2))
m2_bic = append(m2_bic, BIC(m2))
}
aic_dif = m1_aic - m2_aic
wv = seq(400, 2400, 10)
plot(wv, aic_dif, type = 'l', xlab = 'Wavelength (nm)', ylab = '∆AIC',
main = 'No normalization magnitude AIC minus with normalization magnitude AIC')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
jpeg(filename = '../../lichen figures/aic_comparision_normalization-raw-spec.jpeg',
width = 8, height = 6, units = 'in', res = 1200)
wv = seq(400, 2400, 10)
plot(wv, aic_dif, type = 'l', xlab = 'Wavelength (nm)', ylab = '∆AIC',
main = 'No normalization magnitude AIC minus with normalization magnitude AIC')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
dev.off()
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
vn_spectra = normalize(spectra)
data$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
m1_aic = c()
m2_aic = c()
m1_bic = c()
m2_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
m1 = lmer(spec_df[, x] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m1_aic = append(m1_aic, AIC(m1))
m1_bic = append(m1_bic, BIC(m1))
m2 = lmer(spec_df[, x] ~ age + normalization_magnitude + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m2_aic = append(m2_aic, AIC(m2))
m2_bic = append(m2_bic, BIC(m2))
}
aic_dif = m1_aic - m2_aic
wv = seq(400, 2400, 10)
plot(wv, aic_dif, type = 'l', xlab = 'Wavelength (nm)', ylab = '∆AIC',
main = 'No normalization magnitude AIC minus with normalization magnitude AIC')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
vn_spectra = normalize(spectra)
data$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
m1_aic = c()
m2_aic = c()
m1_bic = c()
m2_bic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
m1 = lmer(spec_df[, x] ~ age + normalization_magnitude + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m1_aic = append(m1_aic, AIC(m1))
m1_bic = append(m1_bic, BIC(m1))
m2 = lmer(spec_df[, x] ~ age + normalization_magnitude + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m2_aic = append(m2_aic, AIC(m2))
m2_bic = append(m2_bic, BIC(m2))
}
aic_dif = m1_aic - m2_aic
wv = seq(400, 2400, 10)
plot(wv, aic_dif, type = 'l', xlab = 'Wavelength (nm)', ylab = '∆AIC',
main = 'No normalization magnitude AIC minus with normalization magnitude AIC')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
plot(wv, m1_bic, col = 'blue', type = 'l', xlab = 'Wavelength (nm)', ylab = 'BIC')
lines(wv, m2_bic, col = 'red')
legend('bottomright',
c('M1', 'M2'),
col = c('blue', 'red'), lty = c(1,1))
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = normalize(spectra[meta(spectra)$age <= 60, ])
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
ranIntercepts = as.data.frame(matrix(nrow = 29))
rownames(ranIntercepts) = sort(unique(spec_df$scientificName))
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
vn_spectra = normalize(spectra)
data$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
lmm = lmer(spec_df[, '700'] ~ age + normalization_magnitude + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
coefs = coef(lmm)
coefs
variances = as.data.frame(VarCorr(lmm))
variances
fixef(lmm)
confint(lmm)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
vn_spectra = normalize(spectra)
data$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
intercept_variance = c()
resid_variance = c()
psuedoR2 = c()
fixed_intercept_list = c()
fixed_age_list = c()
fixed_normMag_list = c()
intercept_2.5_list = c()
intercept_97.5_list = c()
age_97.5_list = c()
age_2.5_list = c()
normMag_2.5_list = c()
normMag_97.5_list = c()
for(i in seq(400, 2400, 1)) {
x = toString(i)
lmm = lmer(spec_df[, x] ~ age + normalization_magnitude + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
coefs = coef(lmm)
ranIntercepts = cbind(ranIntercepts, coefs[[1]][,1])
variances = as.data.frame(VarCorr(lmm))
intercept_variance = append(intercept_variance, variances[1,4])
resid_variance = append(resid_variance, variances[2,4])
psuedoR2 = append(psuedoR2, (variances[1,4]/(variances[1,4] + variances[2,4])))
fixed_intercept_list = append(fixed_intercept_list, as.numeric(fixef(lmm)[1]))
fixed_age_list = append(fixed_age_list, as.numeric(fixef(lmm)[2]))
fixed_normMag_list = append(fixed_normMag_list, as.numeric(fixef(lmm)[3]))
ci = confint(lmm)
intercept_2.5_list = append(intercept_2.5_list, ci[3])
intercept_97.5_list = append(intercept_97.5_list, ci[8])
age_2.5_list = append(age_2.5_list, ci[4])
age_97.5_list = append(age_97.5_list, ci[9])
normMag_2.5_list = append(normMag_2.5_list, ci[5])
normMag_97.5_list = append(normMag_97.5_list, ci[10])
}
stats_list = list()
ranIntercepts = ranIntercepts[,-1]
colnames(ranIntercepts) = seq(400,2400, 1)
stats_list = list.append(stats_list, ranIntercepts) #1
stats_list = list.append(stats_list, intercept_variance) #2
stats_list = list.append(stats_list, resid_variance) #3
stats_list = list.append(stats_list, psuedoR2) #4
stats_list = list.append(stats_list, fixed_intercept_list) #5
stats_list = list.append(stats_list, fixed_age_list) #6
stats_list = list.append(stats_list, fixed_normMag_list) #7
stats_list = list.append(stats_list, intercept_2.5_list) #8
stats_list = list.append(stats_list, intercept_97.5_list) #9
stats_list = list.append(stats_list, age_2.5_list) #10
stats_list = list.append(stats_list, age_97.5_list) #11
stats_list = list.append(stats_list, normMag_2.5_list) #12
stats_list = list.append(stats_list, normMag_97.5_list) #13
saveRDS(stats_list, 'models/lmms/lmm_60yrs_fixedSlope_with_normMag.rds')
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
vn_spectra = normalize(spectra)
data$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
ranIntercepts = as.data.frame(matrix(nrow = 29))
rownames(ranIntercepts) = sort(unique(spec_df$scientificName))
intercept_variance = c()
resid_variance = c()
psuedoR2 = c()
fixed_intercept_list = c()
fixed_age_list = c()
fixed_normMag_list = c()
intercept_2.5_list = c()
intercept_97.5_list = c()
age_97.5_list = c()
age_2.5_list = c()
normMag_2.5_list = c()
normMag_97.5_list = c()
for(i in seq(400, 2400, 1)) {
x = toString(i)
lmm = lmer(spec_df[, x] ~ age + normalization_magnitude + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
coefs = coef(lmm)
ranIntercepts = cbind(ranIntercepts, coefs[[1]][,1])
variances = as.data.frame(VarCorr(lmm))
intercept_variance = append(intercept_variance, variances[1,4])
resid_variance = append(resid_variance, variances[2,4])
psuedoR2 = append(psuedoR2, (variances[1,4]/(variances[1,4] + variances[2,4])))
fixed_intercept_list = append(fixed_intercept_list, as.numeric(fixef(lmm)[1]))
fixed_age_list = append(fixed_age_list, as.numeric(fixef(lmm)[2]))
fixed_normMag_list = append(fixed_normMag_list, as.numeric(fixef(lmm)[3]))
ci = confint(lmm)
intercept_2.5_list = append(intercept_2.5_list, ci[3])
intercept_97.5_list = append(intercept_97.5_list, ci[8])
age_2.5_list = append(age_2.5_list, ci[4])
age_97.5_list = append(age_97.5_list, ci[9])
normMag_2.5_list = append(normMag_2.5_list, ci[5])
normMag_97.5_list = append(normMag_97.5_list, ci[10])
}
stats_list = list()
ranIntercepts = ranIntercepts[,-1]
colnames(ranIntercepts) = seq(400,2400, 1)
stats_list = list.append(stats_list, ranIntercepts) #1
stats_list = list.append(stats_list, intercept_variance) #2
stats_list = list.append(stats_list, resid_variance) #3
stats_list = list.append(stats_list, psuedoR2) #4
stats_list = list.append(stats_list, fixed_intercept_list) #5
stats_list = list.append(stats_list, fixed_age_list) #6
stats_list = list.append(stats_list, fixed_normMag_list) #7
stats_list = list.append(stats_list, intercept_2.5_list) #8
stats_list = list.append(stats_list, intercept_97.5_list) #9
stats_list = list.append(stats_list, age_2.5_list) #10
stats_list = list.append(stats_list, age_97.5_list) #11
stats_list = list.append(stats_list, normMag_2.5_list) #12
stats_list = list.append(stats_list, normMag_97.5_list) #13
saveRDS(stats_list, 'models/lmms/lmm_60yrs_fixedSlope_normMag.rds')
par(mfrow = c(2,3))
#slopes - age
wv = seq(400, 2400, 1)
plot(wv, stats_list[[6]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance / year',
ylim = c(min(stats_list[[10]]), max(stats_list[[11]])),
main = 'Effect of age')
polygon(c(wv, rev(wv)), c(stats_list[[10]], rev(stats_list[[11]])),
col = 'grey90',
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[6]])
#slopes - normMag
wv = seq(400, 2400, 1)
plot(wv, stats_list[[7]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = 'Reflectance / unit normalization magnitude)',
ylim = c(min(stats_list[[12]]), max(stats_list[[13]])),
main = 'Effect of normalization magnitude')
polygon(c(wv, rev(wv)), c(stats_list[[12]], rev(stats_list[[13]])),
col = 'grey90',
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[7]])
#intercepts
wv = seq(400, 2400, 1)
plot(wv, stats_list[[5]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance',
ylim = c(min(stats_list[[1]]), max(stats_list[[1]])),
main = 'Intercepts')
polygon(c(wv, rev(wv)), c(stats_list[[8]], rev(stats_list[[9]])),
col = 'grey90',
lty = 0)
for (i in 1:nrow(stats_list[[1]])){
lines(wv, stats_list[[1]][i,], col = 'grey' )
}
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[5]])
#variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[2]],
ylim = c(min(stats_list[[2]]), max(stats_list[[2]])),
main = 'Random effects variance',
ylab = 'Variance',
xlab = 'Wavelength (nm)',
col = 'blue',
type = 'l')
lines(wv, stats_list[[3]], col = 'gray')
legend('topright',
c('Intercept', 'Residual'),
col = c('blue', 'gray'), lty = c(1,1,1))
#Random Variance explained
wv = seq(400, 2400, 1)
plot(wv, stats_list[[4]],
ylim = range(stats_list[[4]]),
main = 'Random effects variance explained by species',
ylab = 'Proportion of variance explained',
xlab = 'Wavelength (nm)',
type = 'l')
stats_list = readRDS('models/lmms/lmm_60yrs_fixedSlope_normMag.rds')
jpeg(filename = '../../lichen figures/fixedSlope_results_normMag.jpeg',
width = 12, height = 8, units = 'in', res = 1200)
par(mfrow = c(2,3))
#slopes - age
wv = seq(400, 2400, 1)
plot(wv, stats_list[[6]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance / year',
ylim = c(min(stats_list[[10]]), max(stats_list[[11]])),
main = 'Effect of age')
polygon(c(wv, rev(wv)), c(stats_list[[10]], rev(stats_list[[11]])),
col = 'grey90',
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[6]])
#slopes - normMag
wv = seq(400, 2400, 1)
plot(wv, stats_list[[7]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = 'Reflectance / unit normalization magnitude)',
ylim = c(min(stats_list[[12]]), max(stats_list[[13]])),
main = 'Effect of normalization magnitude')
polygon(c(wv, rev(wv)), c(stats_list[[12]], rev(stats_list[[13]])),
col = 'grey90',
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[7]])
#intercepts
wv = seq(400, 2400, 1)
plot(wv, stats_list[[5]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance',
ylim = c(min(stats_list[[1]]), max(stats_list[[1]])),
main = 'Intercepts')
polygon(c(wv, rev(wv)), c(stats_list[[8]], rev(stats_list[[9]])),
col = 'grey90',
lty = 0)
for (i in 1:nrow(stats_list[[1]])){
lines(wv, stats_list[[1]][i,], col = 'grey' )
}
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[5]])
#variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[2]],
ylim = c(min(stats_list[[2]]), max(stats_list[[2]])),
main = 'Random effects variance',
ylab = 'Variance',
xlab = 'Wavelength (nm)',
col = 'blue',
type = 'l')
lines(wv, stats_list[[3]], col = 'gray')
legend('topright',
c('Intercept', 'Residual'),
col = c('blue', 'gray'), lty = c(1,1,1))
#Random Variance explained
wv = seq(400, 2400, 1)
plot(wv, stats_list[[4]],
ylim = range(stats_list[[4]]),
main = 'Random effects variance explained by species',
ylab = 'Proportion of variance explained',
xlab = 'Wavelength (nm)',
type = 'l')
dev.off()
