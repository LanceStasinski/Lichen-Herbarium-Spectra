library(partR2)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
#spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
#vn_spectra = normalize(spectra_percent)
#vn_spec_df = as.data.frame(vn_spectra)
#data$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
m1_aic = c()
m2_aic = c()
m1_bic = c()
m2_bic = c()
m3_aic = c()
m3_bic = c()
for(i in seq(400, 2400, 1)) {
x = toString(i)
m1 = lmer(spec_df[, x] ~ age  + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m1_aic = append(m1_aic, AIC(m1))
m1_bic = append(m1_bic, BIC(m1))
m2 = lmer(spec_df[, x] ~ 1 + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m2_aic = append(m2_aic, AIC(m2))
m2_bic = append(m2_bic, BIC(m2))
m3 = lmer(spec_df[, x] ~ 1 + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
m3_aic = append(m3_aic, AIC(m3))
m3_bic = append(m3_bic, BIC(m3))
}
aic_dif1 = m1_aic - m2_aic
aic_dif2 = m1_aic - m3_aic
par(mfrow = c(1,1))
wv = seq(400, 2400, 1)
plot(wv, aic_dif1, type = 'l', xlab = 'Wavelength (nm)', ylab = '∆AIC',
main = 'Fixed-slope AIC minus Intercept-only AIC', col = 'blue')
abline(h=0, col = 'blue', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
lines(wv, aic_dif2, col = 'red')
jpeg(filename = '../../lichen figures/aic_comparision_fixed-slope_vs_others.jpeg',
width = 8, height = 6, units = 'in', res = 1200)
par(mfrow = c(1,1))
wv = seq(400, 2400, 1)
plot(wv, aic_dif1, type = 'l', xlab = 'Wavelength (nm)', ylab = '∆AIC',
main = '', col = 'blue')
abline(h=0, col = 'black', lty = 2)
rect(0, -2, 2500, 2,
col = rgb(red= 0, green=0,
blue=0, alpha=0.1),
lty = 0)
lines(wv, aic_dif2, col = 'red')
legend('bottomright',
c('∆AIC Intercept-only', '∆AIC Variable-slope'),
col = c('blue', 'red'), lty = c(1,1))
dev.off()
#setup
################################################################################
library(spectrolab)
library(lme4)
library(nlme)
library(ggplot2)
library(ggeffects)
library(sjPlot)
library(rlist)
library(optimx)
library(forecast)
library(partR2)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
m = lm(normalization_magnitude ~ age, data = spec_df)
lmm = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
lmm2 = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
lmm3 = lmer(normalization_magnitude ~ 1 + (1|scientificName), data = spec_df)
AIC(m)
AIC(lmm)
AIC(lmm2)
AIC(lmm3)
library(spectrolab)
library(lme4)
library(nlme)
library(ggplot2)
library(ggeffects)
library(sjPlot)
library(rlist)
library(optimx)
library(forecast)
library(partR2)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[, 400:700]
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
m = lm(normalization_magnitude ~ age, data = spec_df)
lmm = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
lmm2 = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
lmm3 = lmer(normalization_magnitude ~ 1 + (1|scientificName), data = spec_df)
AIC(m)
AIC(lmm)
AIC(lmm2)
AIC(lmm3)
m = lm(normalization_magnitude ~ age, data = spec_df)
fixed_slope = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
var_slope = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
intercept = lmer(normalization_magnitude ~ 1 + (1|scientificName), data = spec_df)
AIC(m)
AIC(fixed_slope)
AIC(var_slope)
AIC(intercept)
################################################################################
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[, 400:700]
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
m = lm(normalization_magnitude ~ age, data = spec_df)
intercept = lmer(normalization_magnitude ~ 1 + (1|scientificName), data = spec_df)
fixed_slope = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
var_slope = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
AIC(m)
AIC(fixed_slope)
AIC(var_slope)
AIC(intercept)
AIC(m)
AIC(intercept)
AIC(fixed_slope)
AIC(var_slope)
coefs = coef(lmm)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'black', lwd = 3)
coefs = coef(intercept)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'black', lwd = 3)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(intercept)[1], fixef(intercept)[2], col = 'black', lwd = 3)
coef(intercept)
AIC(m)
AIC(intercept)
AIC(fixed_slope)
AIC(var_slope)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[, 701:1100]
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
m = lm(normalization_magnitude ~ age, data = spec_df)
intercept = lmer(normalization_magnitude ~ 1 + (1|scientificName), data = spec_df)
fixed_slope = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
var_slope = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
AIC(m)
AIC(intercept)
AIC(fixed_slope)
AIC(var_slope)
spectra = spectra[, 1101:2400]
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
m = lm(normalization_magnitude ~ age, data = spec_df)
intercept = lmer(normalization_magnitude ~ 1 + (1|scientificName), data = spec_df)
fixed_slope = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
var_slope = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
AIC(m)
AIC(intercept)
AIC(fixed_slope)
AIC(var_slope)
################################################################################
spectra = readRDS('spectra/lichen_spectra.rds')
#400:700
#701:1100
#1101:2400
spectra = spectra[, 1101:2400]
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
m = lm(normalization_magnitude ~ age, data = spec_df)
intercept = lmer(normalization_magnitude ~ 1 + (1|scientificName), data = spec_df)
fixed_slope = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
var_slope = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
AIC(m)
AIC(intercept)
AIC(fixed_slope)
AIC(var_slope)
spectra = readRDS('spectra/lichen_spectra.rds')
#400:700
#701:1100
#1101:2400
spectra = spectra[, ]
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
m = lm(normalization_magnitude ~ age, data = spec_df)
intercept = lmer(normalization_magnitude ~ 1 + (1|scientificName), data = spec_df)
fixed_slope = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
var_slope = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
AIC(m)
AIC(intercept)
AIC(fixed_slope)
AIC(var_slope)
spectra = readRDS('spectra/lichen_spectra.rds')
#400:700
#701:1100
#1101:2400
spectra = spectra[,700:1900 ]
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
m = lm(normalization_magnitude ~ age, data = spec_df)
intercept = lmer(normalization_magnitude ~ 1 + (1|scientificName), data = spec_df)
fixed_slope = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
var_slope = lmer(normalization_magnitude ~ age + (1 + age|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5,
optCtrl = list(maxfun = 1e5)))
AIC(m)
AIC(intercept)
AIC(fixed_slope)
AIC(var_slope)
coefs = coef(fixed_slope)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(fixed_slope)[1], fixef(fixed_slope)[2], col = 'black', lwd = 3)
library(RColorBrewer)
col_pal = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, col_pal$maxcolors, rownames(col_pal)))
cols = sample(col_vector, 29)
spec_df$color = 'black'
species = sort(unique(spec_df$scientificName))
for (i in 1:length(species)) {
spec_df$color[spec_df$scientificName == species[i]] = cols[i]
}
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(fixed_slope)[1], fixef(fixed_slope)[2], col = 'black', lwd = 3)
jpeg(filename = '../../lichen figures/normMag-age_700-1900.jpeg',
width = 9, height = 8, units = 'in', res = 1200)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(fixed_slope)[1], fixef(fixed_slope)[2], col = 'black', lwd = 3)
dev.off()
jpeg(filename = '../../lichen figures/normMag-age_700-1900.jpeg',
width = 9, height = 8, units = 'in', res = 1200)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(fixed_slope)[1], fixef(fixed_slope)[2], col = 'black', lwd = 3)
dev.off()
library(RColorBrewer)
col_pal = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, col_pal$maxcolors, rownames(col_pal)))
cols = sample(col_vector, 29)
spec_df$color = 'black'
species = sort(unique(spec_df$scientificName))
for (i in 1:length(species)) {
spec_df$color[spec_df$scientificName == species[i]] = cols[i]
}
coefs = coef(fixed_slope)
jpeg(filename = '../../lichen figures/normMag-age_700-1900.jpeg',
width = 9, height = 8, units = 'in', res = 1200)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(fixed_slope)[1], fixef(fixed_slope)[2], col = 'black', lwd = 3)
dev.off()
col_pal = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, col_pal$maxcolors, rownames(col_pal)))
cols = sample(col_vector, 29)
spec_df$color = 'black'
species = sort(unique(spec_df$scientificName))
for (i in 1:length(species)) {
spec_df$color[spec_df$scientificName == species[i]] = cols[i]
}
coefs = coef(fixed_slope)
jpeg(filename = '../../lichen figures/normMag-age_700-1900.jpeg',
width = 9, height = 8, units = 'in', res = 1200)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age', col = spec_df$color, pch = 16)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = cols[i])
}
abline(fixef(fixed_slope)[1], fixef(fixed_slope)[2], col = 'black', lwd = 3)
dev.off()
.06+.03+.01+.04+.005+.005+.01+.04+.005
.77+.205
pls = readRDS('models/order.rds')
library(corrplot)
library(matrixStats)
library(naniar)
library(spectrolab)
cm.list = pls[[3]]
cm.avg = Reduce('+', cm.list)/100
cm.avg = t(cm.avg)
cm.total = cm.avg/rowSums(cm.avg)
cm.sd = f1(cm.list)
cm.sd = t(cm.sd)
cm.sd = cm.sd/rowSums(cm.avg)
rownames(cm.sd) = rownames(as.matrix(cm.list[[1]]))
colnames(cm.sd) = colnames(as.matrix(cm.list[[1]]))
#standard deviations
f1 <- function(lst){
n <- length(lst);
rc <- dim(lst[[1]]);
ar1 <- array(unlist(lst), c(rc, n));
round(apply(ar1, c(1, 2), sd), 2);
}
cm.sd = f1(cm.list)
cm.sd = t(cm.sd)
cm.sd = cm.sd/rowSums(cm.avg)
rownames(cm.sd) = rownames(as.matrix(cm.list[[1]]))
colnames(cm.sd) = colnames(as.matrix(cm.list[[1]]))
View(cm.total)
View(cm.sd)
x = .01 + .005 + .01 + 0.005 + .11 +.05
y = .12 + .09
x/(x+y)
pls = readRDS('models/class.rds')
cm.list = pls[[3]]
cm.avg = Reduce('+', cm.list)/100
cm.avg = t(cm.avg)
cm.total = cm.avg/rowSums(cm.avg)
#standard deviations
f1 <- function(lst){
n <- length(lst);
rc <- dim(lst[[1]]);
ar1 <- array(unlist(lst), c(rc, n));
round(apply(ar1, c(1, 2), sd), 2);
}
cm.sd = f1(cm.list)
cm.sd = t(cm.sd)
cm.sd = cm.sd/rowSums(cm.avg)
rownames(cm.sd) = rownames(as.matrix(cm.list[[1]]))
colnames(cm.sd) = colnames(as.matrix(cm.list[[1]]))
View(cm.total)
View(cm.sd)
citation('lme4')
citation('partR2')
?partR2
################################################################################
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = spectra[, 700:1900]
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
lmm = lmer(spec_df[, '700'] ~ 1 + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
coefs = coef(lmm)
coefs
variances = as.data.frame(VarCorr(lmm))
variances
fixef(lmm)
confint(lmm)
confint(lmm)[6]
partR2(lmm, R2_type = 'conditional', nboot = 10)
partR2(lmm, R2_type = 'marginal', nboot = 10)
R2(lmm)
stats_list = readRDS('models/lmms/lmm_60yrs_fixedSlope.rds')
stats_list = readRDS('models/lmms/lmm_60yrs_fixedSlope.rds')
jpeg(filename = '../../lichen figures/fixedSlope_results_noNorm.jpeg',
width = 8, height = 12, units = 'in', res = 1200)
par(mfrow = c(3,2))
#slopes
wv = seq(400, 2400, 1)
plot(wv, stats_list[[6]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = 'Effect of age (% reflectance/year)',
ylim = c(min(stats_list[[9]]), max(stats_list[[10]])),
main = 'Fixed slope')
polygon(c(wv, rev(wv)), c(stats_list[[9]], rev(stats_list[[10]])),
col = 'grey90',
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[6]])
#intercepts
wv = seq(400, 2400, 1)
plot(wv, stats_list[[5]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = 'Intercept (% reflectance)',
ylim = c(min(stats_list[[1]]), max(stats_list[[1]])),
main = 'Intercepts')
for (i in 1:nrow(stats_list[[1]])){
lines(wv, stats_list[[1]][i,], col = 'grey' )
}
polygon(c(wv, rev(wv)), c(stats_list[[7]], rev(stats_list[[8]])),
col = rgb(0,0,1,0.2),
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[5]], col = rgb(0,0,0,1))
#marginal and conditional variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[11]],
type = 'l',
col = rgb(0,0,1,1),
xlab = 'Wavelength (nm)',
ylab = 'r-squared',
ylim = c(0,1),
main = 'Conditional and Marginal r-squared')
polygon(c(wv, rev(wv)), c(stats_list[[12]], rev(stats_list[[13]])),
col = rgb(0,0,1, 0.2),
lty = 0)
lines(wv, stats_list[[14]], col = rgb(1,0,0,1))
polygon(c(wv, rev(wv)), c(stats_list[[15]], rev(stats_list[[16]])),
col = rgb(1,0,0, 0.2),
lty = 0)
legend('topright',
c('Conditional R2', 'Marginal R2'),
col = c(rgb(0,0,1,1), rgb(1,0,0,1)), lty = c(1,1))
#variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[2]],
ylim = c(min(stats_list[[2]]), max(stats_list[[2]])),
main = 'Random effects variance',
ylab = 'Variance',
xlab = 'Wavelength (nm)',
col = 'blue',
type = 'l')
lines(wv, stats_list[[3]], col = 'gray')
legend('topright',
c('Intercept', 'Residual'),
col = c('blue', 'gray'), lty = c(1,1,1))
#Random Variance explained
wv = seq(400, 2400, 1)
plot(wv, stats_list[[4]],
ylim = range(stats_list[[4]]),
main = 'Random effects variance explained by species',
ylab = 'Proportion of variance explained',
xlab = 'Wavelength (nm)',
type = 'l')
dev.off()
