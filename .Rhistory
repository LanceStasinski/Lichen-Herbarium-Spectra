plot(wv, stats_list[[2]],
ylim = c(min(stats_list[[2]]), max(stats_list[[2]])),
main = 'Random effects variance',
ylab = 'Variance',
xlab = 'Wavelength (nm)',
col = 'blue',
type = 'l')
lines(wv, stats_list[[3]], col = 'gray')
legend('topright',
c('Intercept', 'Residual'),
col = c('blue', 'gray'), lty = c(1,1,1))
#Random Variance explained
wv = seq(400, 2400, 1)
plot(wv, stats_list[[4]],
ylim = range(stats_list[[4]]),
main = 'Random effects variance explained by species',
ylab = 'Proportion of variance explained',
xlab = 'Wavelength (nm)',
type = 'l')
dev.off()
wv = seq(400, 2400, 1)
plot(wv, stats_list[[20]],
type = 'l',
col = rgb(90,180,172,1),
xlab = 'Wavelength (nm)',
ylab = 'R-squared',
ylim = c(0,1),
main = 'Partial R-squared')
polygon(c(wv, rev(wv)), c(stats_list[[21]], rev(stats_list[[22]])),
col = rgb(90/256,180/256,172/256, 0.2),
lty = 0)
lines(wv, stats_list[[23]], col = rgb(216/256,179/256,101/256,1))
polygon(c(wv, rev(wv)), c(stats_list[[24]], rev(stats_list[[25]])),
col = rgb(216/256,179/256,101/256, 0.2),
lty = 0)
legend('right',
c('Age R2', 'Normalization magnitude R2'),
col = c(rgb(90/256,180/256,172/256,1), rgb(216/256,179/256,101/256,1)),
lty = c(1,1))
plot(wv, stats_list[[20]],
type = 'l',
col = rgb(90,180,172,1),
xlab = 'Wavelength (nm)',
ylab = 'R-squared',
ylim = c(0,1),
main = 'Partial R-squared')
wv = seq(400, 2400, 1)
plot(wv, stats_list[[20]],
type = 'l',
col = rgb(90/256,180/256,17/2562,1),
xlab = 'Wavelength (nm)',
ylab = 'R-squared',
ylim = c(0,1),
main = 'Partial R-squared')
polygon(c(wv, rev(wv)), c(stats_list[[21]], rev(stats_list[[22]])),
col = rgb(90/256,180/256,172/256, 0.2),
lty = 0)
lines(wv, stats_list[[23]], col = rgb(216/256,179/256,101/256,1))
polygon(c(wv, rev(wv)), c(stats_list[[24]], rev(stats_list[[25]])),
col = rgb(216/256,179/256,101/256, 0.2),
lty = 0)
legend('right',
c('Age R2', 'Normalization magnitude R2'),
col = c(rgb(90/256,180/256,172/256,1), rgb(216/256,179/256,101/256,1)),
lty = c(1,1))
jpeg(filename = '../../lichen figures/fixedSlope_results_withNormMag_R2.jpeg',
width = 8, height = 8, units = 'in', res = 1200)
par(mfrow = c(3,2))
#slopes - age
wv = seq(400, 2400, 1)
plot(wv, stats_list[[6]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance / year',
ylim = c(min(stats_list[[10]]), max(stats_list[[11]])),
main = 'Effect of age')
polygon(c(wv, rev(wv)), c(stats_list[[10]], rev(stats_list[[11]])),
col = 'grey90',
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[6]])
#slopes - normMag
#wv = seq(400, 2400, 1)
#plot(wv, stats_list[[7]],
#     type = 'l',
#     xlab = 'Wavelength (nm)',
#     ylab = 'Reflectance / unit normalization magnitude)',
#     ylim = c(min(stats_list[[12]]), max(stats_list[[13]])),
#     main = 'Effect of normalization magnitude')
#polygon(c(wv, rev(wv)), c(stats_list[[12]], rev(stats_list[[13]])),
#        col = 'grey90',
#        lty = 0)
#abline(h = 0, lty = 2, col = 'blue')
#lines(wv, stats_list[[7]])
#intercepts
wv = seq(400, 2400, 1)
plot(wv, stats_list[[5]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance',
ylim = c(min(stats_list[[1]]), max(stats_list[[1]])),
main = 'Intercepts')
polygon(c(wv, rev(wv)), c(stats_list[[8]], rev(stats_list[[9]])),
col = rgb(0,0,1,0.2),
lty = 0)
for (i in 1:nrow(stats_list[[1]])){
lines(wv, stats_list[[1]][i,], col = 'grey' )
}
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[5]], col = rgb(0,0,1,1))
#marginal and conditional variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[14]],
type = 'l',
col = rgb(0,0,1,1),
xlab = 'Wavelength (nm)',
ylab = 'R-squared',
ylim = c(0,1),
main = 'Conditional and Marginal R-squared')
polygon(c(wv, rev(wv)), c(stats_list[[15]], rev(stats_list[[16]])),
col = rgb(0,0,1, 0.2),
lty = 0)
lines(wv, stats_list[[17]], col = rgb(1,0,0,1))
polygon(c(wv, rev(wv)), c(stats_list[[18]], rev(stats_list[[19]])),
col = rgb(1,0,0, 0.2),
lty = 0)
legend('bottomright',
c('Conditional R2', 'Marginal R2'),
col = c(rgb(0,0,1,1), rgb(1,0,0,1)), lty = c(1,1))
#partial R2 - marginal
wv = seq(400, 2400, 1)
plot(wv, stats_list[[20]],
type = 'l',
col = rgb(90/256,180/256,17/2562,1),
xlab = 'Wavelength (nm)',
ylab = 'R-squared',
ylim = c(0,1),
main = 'Partial R-squared')
polygon(c(wv, rev(wv)), c(stats_list[[21]], rev(stats_list[[22]])),
col = rgb(90/256,180/256,172/256, 0.2),
lty = 0)
lines(wv, stats_list[[23]], col = rgb(216/256,179/256,101/256,1))
polygon(c(wv, rev(wv)), c(stats_list[[24]], rev(stats_list[[25]])),
col = rgb(216/256,179/256,101/256, 0.2),
lty = 0)
legend('right',
c('Age R2', 'Normalization magnitude R2'),
col = c(rgb(90/256,180/256,172/256,1), rgb(216/256,179/256,101/256,1)),
lty = c(1,1))
#Random variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[2]],
ylim = c(min(stats_list[[2]]), max(stats_list[[2]])),
main = 'Random effects variance',
ylab = 'Variance',
xlab = 'Wavelength (nm)',
col = 'blue',
type = 'l')
lines(wv, stats_list[[3]], col = 'gray')
legend('topright',
c('Intercept', 'Residual'),
col = c('blue', 'gray'), lty = c(1,1,1))
#Random Variance explained
wv = seq(400, 2400, 1)
plot(wv, stats_list[[4]],
ylim = range(stats_list[[4]]),
main = 'Random effects variance explained by species',
ylab = 'Proportion of variance explained',
xlab = 'Wavelength (nm)',
type = 'l')
dev.off()
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
vn_spectra = normalize(spectra_percent)
vn_spec_df = as.data.frame(vn_spectra)
data$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
m1_aic = c()
m2_aic = c()
m1_bic = c()
m2_bic = c()
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
#spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
data = meta(spectra)
spec.m = as.matrix(spectra) * 100
spectra_percent = as_spectra(spec.m)
vn_spectra = normalize(spectra_percent)
vn_spec_df = as.data.frame(vn_spectra)
data$normalization_magnitude = meta(vn_spectra)$normalization_magnitude
meta(spectra_percent) = data
spec_df = as.data.frame(spectra_percent)
m1_aic = c()
m2_aic = c()
m1_bic = c()
m2_bic = c()
m1 = lmer(spec_df[, '1700'] ~ age + normalization_magnitude + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
AIC(m1)
m2 = lmer(vn_spec_df[, '1700'] ~ age + (1|scientificName),
data = spec_df, REML = T,
lmerControl(optimizer ='bobyqa', boundary.tol = 1e-5, optCtrl = list(maxfun = 1e5)))
AIC(m2)
stats_list = readRDS('models/lmms/lmm_60yrs_fixedSlope_normMag.rds')
jpeg(filename = '../../lichen figures/fixedSlope_results_withNormMag_R2.jpeg',
width = 8, height = 8, units = 'in', res = 1200)
par(mfrow = c(3,2))
#slopes - age
wv = seq(400, 2400, 1)
plot(wv, stats_list[[6]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance / year',
ylim = c(min(stats_list[[10]]), max(stats_list[[11]])),
main = 'Effect of age')
polygon(c(wv, rev(wv)), c(stats_list[[10]], rev(stats_list[[11]])),
col = 'grey90',
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[6]])
#slopes - normMag
#wv = seq(400, 2400, 1)
#plot(wv, stats_list[[7]],
#     type = 'l',
#     xlab = 'Wavelength (nm)',
#     ylab = 'Reflectance / unit normalization magnitude)',
#     ylim = c(min(stats_list[[12]]), max(stats_list[[13]])),
#     main = 'Effect of normalization magnitude')
#polygon(c(wv, rev(wv)), c(stats_list[[12]], rev(stats_list[[13]])),
#        col = 'grey90',
#        lty = 0)
#abline(h = 0, lty = 2, col = 'blue')
#lines(wv, stats_list[[7]])
#intercepts
wv = seq(400, 2400, 1)
plot(wv, stats_list[[5]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance',
ylim = c(min(stats_list[[1]]), max(stats_list[[1]])),
main = 'Intercepts')
for (i in 1:nrow(stats_list[[1]])){
lines(wv, stats_list[[1]][i,], col = 'grey' )
}
polygon(c(wv, rev(wv)), c(stats_list[[8]], rev(stats_list[[9]])),
col = rgb(0,0,1,0.2),
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[5]], col = rgb(0,0,1,1))
#marginal and conditional variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[14]],
type = 'l',
col = rgb(0,0,1,1),
xlab = 'Wavelength (nm)',
ylab = 'R-squared',
ylim = c(0,1),
main = 'Conditional and Marginal R-squared')
polygon(c(wv, rev(wv)), c(stats_list[[15]], rev(stats_list[[16]])),
col = rgb(0,0,1, 0.2),
lty = 0)
lines(wv, stats_list[[17]], col = rgb(1,0,0,1))
polygon(c(wv, rev(wv)), c(stats_list[[18]], rev(stats_list[[19]])),
col = rgb(1,0,0, 0.2),
lty = 0)
legend('bottomright',
c('Conditional R2', 'Marginal R2'),
col = c(rgb(0,0,1,1), rgb(1,0,0,1)), lty = c(1,1))
#partial R2 - marginal
wv = seq(400, 2400, 1)
plot(wv, stats_list[[20]],
type = 'l',
col = rgb(90/256,180/256,17/2562,1),
xlab = 'Wavelength (nm)',
ylab = 'R-squared',
ylim = c(0,1),
main = 'Partial R-squared')
polygon(c(wv, rev(wv)), c(stats_list[[21]], rev(stats_list[[22]])),
col = rgb(90/256,180/256,172/256, 0.2),
lty = 0)
lines(wv, stats_list[[23]], col = rgb(216/256,179/256,101/256,1))
polygon(c(wv, rev(wv)), c(stats_list[[24]], rev(stats_list[[25]])),
col = rgb(216/256,179/256,101/256, 0.2),
lty = 0)
legend('right',
c('Age R2', 'Normalization magnitude R2'),
col = c(rgb(90/256,180/256,172/256,1), rgb(216/256,179/256,101/256,1)),
lty = c(1,1))
#Random variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[2]],
ylim = c(min(stats_list[[2]]), max(stats_list[[2]])),
main = 'Random effects variance',
ylab = 'Variance',
xlab = 'Wavelength (nm)',
col = 'blue',
type = 'l')
lines(wv, stats_list[[3]], col = 'gray')
legend('topright',
c('Intercept', 'Residual'),
col = c('blue', 'gray'), lty = c(1,1,1))
#Random Variance explained
wv = seq(400, 2400, 1)
plot(wv, stats_list[[4]],
ylim = range(stats_list[[4]]),
main = 'Random effects variance explained by species',
ylab = 'Proportion of variance explained',
xlab = 'Wavelength (nm)',
type = 'l')
dev.off()
jpeg(filename = '../../lichen figures/fixedSlope_results_withNormMag_R2.jpeg',
width = 8, height = 8, units = 'in', res = 1200)
par(mfrow = c(3,2))
#slopes - age
wv = seq(400, 2400, 1)
plot(wv, stats_list[[6]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance / year',
ylim = c(min(stats_list[[10]]), max(stats_list[[11]])),
main = 'Effect of age')
polygon(c(wv, rev(wv)), c(stats_list[[10]], rev(stats_list[[11]])),
col = 'grey90',
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[6]])
#slopes - normMag
#wv = seq(400, 2400, 1)
#plot(wv, stats_list[[7]],
#     type = 'l',
#     xlab = 'Wavelength (nm)',
#     ylab = 'Reflectance / unit normalization magnitude)',
#     ylim = c(min(stats_list[[12]]), max(stats_list[[13]])),
#     main = 'Effect of normalization magnitude')
#polygon(c(wv, rev(wv)), c(stats_list[[12]], rev(stats_list[[13]])),
#        col = 'grey90',
#        lty = 0)
#abline(h = 0, lty = 2, col = 'blue')
#lines(wv, stats_list[[7]])
#intercepts
wv = seq(400, 2400, 1)
plot(wv, stats_list[[5]],
type = 'l',
xlab = 'Wavelength (nm)',
ylab = '% reflectance',
ylim = c(min(stats_list[[1]]), max(stats_list[[1]])),
main = 'Intercepts')
for (i in 1:nrow(stats_list[[1]])){
lines(wv, stats_list[[1]][i,], col = 'grey' )
}
polygon(c(wv, rev(wv)), c(stats_list[[8]], rev(stats_list[[9]])),
col = rgb(0,0,1,0.2),
lty = 0)
abline(h = 0, lty = 2, col = 'blue')
lines(wv, stats_list[[5]], col = rgb(0,0,1,1))
#marginal and conditional variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[14]],
type = 'l',
col = rgb(0,0,1,1),
xlab = 'Wavelength (nm)',
ylab = 'R-squared',
ylim = c(0,1),
main = 'Conditional and Marginal R-squared')
polygon(c(wv, rev(wv)), c(stats_list[[15]], rev(stats_list[[16]])),
col = rgb(0,0,1, 0.2),
lty = 0)
lines(wv, stats_list[[17]], col = rgb(1,0,0,1))
polygon(c(wv, rev(wv)), c(stats_list[[18]], rev(stats_list[[19]])),
col = rgb(1,0,0, 0.2),
lty = 0)
legend('bottomright',
c('Conditional R2', 'Marginal R2'),
col = c(rgb(0,0,1,1), rgb(1,0,0,1)), lty = c(1,1))
#partial R2 - marginal
wv = seq(400, 2400, 1)
plot(wv, stats_list[[20]],
type = 'l',
col = rgb(90/256,180/256,17/2562,1),
xlab = 'Wavelength (nm)',
ylab = 'R-squared',
ylim = c(0,1),
main = 'Partial R-squared')
polygon(c(wv, rev(wv)), c(stats_list[[21]], rev(stats_list[[22]])),
col = rgb(90/256,180/256,172/256, 0.2),
lty = 0)
lines(wv, stats_list[[23]], col = rgb(216/256,179/256,101/256,1))
polygon(c(wv, rev(wv)), c(stats_list[[24]], rev(stats_list[[25]])),
col = rgb(216/256,179/256,101/256, 0.2),
lty = 0)
legend('right',
c('Age R2', 'Normalization magnitude R2'),
col = c(rgb(90/256,180/256,172/256,1), rgb(216/256,179/256,101/256,1)),
lty = c(1,1))
#Random variances
wv = seq(400, 2400, 1)
plot(wv, stats_list[[2]],
ylim = c(min(stats_list[[2]]), max(stats_list[[2]])),
main = 'Random effects variance',
ylab = 'Variance',
xlab = 'Wavelength (nm)',
col = 'blue',
type = 'l')
lines(wv, stats_list[[3]], col = 'gray')
legend('topright',
c('Intercept', 'Residual'),
col = c('blue', 'gray'), lty = c(1,1,1))
#Random Variance explained
wv = seq(400, 2400, 1)
plot(wv, stats_list[[4]],
ylim = range(stats_list[[4]]),
main = 'Random effects variance explained by species',
ylab = 'Proportion of variance explained',
xlab = 'Wavelength (nm)',
type = 'l')
dev.off()
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spectra = normalize(spectra)
spectra = aggregate(spectra, meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
lmm = lmer(normalization_magnitude ~ age + (1|scientificName), data = spec_df)
coef(lmm)
c = coef(lmm)
c
c$scientificName
unique(c$scientificName)
c$scientificName$age[1]
plot(spec_df$age, spec_df$normalization_magnitude)
fixef(lmm)
fixef(lmm)[1]
abline(fixef(lmm)[1], fixef(lmm)[2])
length(c)
length(c$scientificName)
length(c$scientificName$age)
#plot
coefs = coef(lmm)
plot(spec_df$age, spec_df$normalization_magnitude)
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'blue')
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = 'gray50')
}
plot(spec_df$age, spec_df$normalization_magnitude)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = 'gray50')
}
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'blue')
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'blue', lwd = 2)
jpeg(filename = '../../lichen figures/normMag-age_allspecies.jpeg',
width = 8, height = 8, units = 'in', res = 1200)
plot(spec_df$age, spec_df$normalization_magnitude)
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = 'gray50')
}
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'blue', lwd = 2)
dev.off()
jpeg(filename = '../../lichen figures/normMag-age_allspecies.jpeg',
width = 9, height = 8, units = 'in', res = 1200)
plot(spec_df$age, spec_df$normalization_magnitude, ylab = 'Normalization Magnitude',
xlab = ' Age')
for (i in 1:29) {
abline(coefs$scientificName$`(Intercept)`[i], coefs$scientificName$age[i],
col = 'gray50')
}
abline(fixef(lmm)[1], fixef(lmm)[2], col = 'blue', lwd = 2)
dev.off()
library(spectrolab)
library(lme4)
library(nlme)
library(ggplot2)
library(ggeffects)
library(sjPlot)
library(rlist)
library(optimx)
library(forecast)
library(partR2)
v = c(2,4,6,4,2)
w = c(1,2,3,4,5)
m = matrix(nrow = 1, ncol = 5)
rbind(m, v)
View(m)
m = rbind(m, v)
m = m[-1,]
m = t(m)
v = sum(v^2)
v
4 + 16 + 36 + 16 + 4
v = c(2,4,6,4,2)
mag = sqrt(sum(v^2))
mag
vn_v = v/mag
vn_v
m_spec = as_spectra(m)
colnames(m) = seq(1,5,1)
m_spec = as_spectra(m)
m_spec
vn_spec = normalize(m_spec)
vn_spec
meta(vn_spec)
