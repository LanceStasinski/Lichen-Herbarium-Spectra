optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
#lmm_fixedSlope = lmer(spec_df[, x] ~ age + (1|scientificName), data = spec_df, REML = FALSE,
# control = lmerControl(optimizer ="Nelder_Mead"))
varSlope_aic = append(varSlope_aic, AIC(lmm_varSlope))
#fixedSlope_aic = append(fixedSlope_aic, AIC(lmm_fixedSlope))
}
warnings()
library(optimx)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
#spectra = normalize(spectra)
#4 scans per individual cannot be treated as independent in a linear model, so
#I'm taking the mean per individual
#spectra = aggregate(spectra, by = meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
varSlope_aic = c()
fixedSlope_aic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
lmm_varSlope = lmer(spec_df[, x] ~ age + (age|scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='L-BFGS-B')))
#lmm_fixedSlope = lmer(spec_df[, x] ~ age + (1|scientificName), data = spec_df, REML = FALSE,
# control = lmerControl(optimizer ="Nelder_Mead"))
varSlope_aic = append(varSlope_aic, AIC(lmm_varSlope))
#fixedSlope_aic = append(fixedSlope_aic, AIC(lmm_fixedSlope))
}
library(optimx)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
#spectra = normalize(spectra)
#4 scans per individual cannot be treated as independent in a linear model, so
#I'm taking the mean per individual
#spectra = aggregate(spectra, by = meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
varSlope_aic = c()
fixedSlope_aic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
lmm_varSlope = lmer(spec_df[, x] ~ age + (age|scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')))
#lmm_fixedSlope = lmer(spec_df[, x] ~ age + (1|scientificName), data = spec_df, REML = FALSE,
# control = lmerControl(optimizer ="Nelder_Mead"))
varSlope_aic = append(varSlope_aic, AIC(lmm_varSlope))
#fixedSlope_aic = append(fixedSlope_aic, AIC(lmm_fixedSlope))
}
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
#spectra = normalize(spectra)
#4 scans per individual cannot be treated as independent in a linear model, so
#I'm taking the mean per individual
#spectra = aggregate(spectra, by = meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
varSlope_aic = c()
fixedSlope_aic = c()
for(i in seq(400, 2400, 10)) {
x = toString(i)
lmm_varSlope = lmer(spec_df[, x] ~ age + (age|scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')))
lmm_fixedSlope = lmer(spec_df[, x] ~ age + (1|scientificName), data = spec_df, REML = FALSE,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')))
varSlope_aic = append(varSlope_aic, AIC(lmm_varSlope))
fixedSlope_aic = append(fixedSlope_aic, AIC(lmm_fixedSlope))
}
wv = seq(400, 2400, 10)
plot(wv, varSlope_aic, col = 'blue', type = 'l')
lines(wv, fixedSlope_aic, col = 'red')
legend('bottomright',
c('Variable slope & intercept', 'Variable intercept'),
col = c('blue', 'red'), lty = c(1,1))
?ranef
lmm = lmer(spec_df[, `700`] ~ age + (age|scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')))
lmm = lmer(spec_df[, '700'] ~ age + (age|scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')))
ran = ranef(lmm)
ran
ran$scientificName
ran[1]
ran[[1]]
ran[[1]][2]
ran[[1]][3]
ran2 = ran[[1]][2]
r = as.data.frame(ran2)
View(r)
nrow(r)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
#spectra = normalize(spectra)
#4 scans per individual cannot be treated as independent in a linear model, so
#I'm taking the mean per individual
#spectra = aggregate(spectra, by = meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
length(unique(spec_df$scientificName))
ranEffects = data.frame(nrow = 29)
View(ranEffects)
ranEffects = data.frame()
lmm = lmer(spec_df[, '700'] ~ age + (age|scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')))
ranEf = ranef(lmm)
ranEffects = cbind(ranEffects, as.data.frame(ranEf[[1]][2]))
ranEffects = as.data.frame(matrix(nrow = 29))
colnames(ranEffects) = spec_df$scientificName
rownames(ranEffects) = spec_df$scientificName
rownames(ranEffects) = unique(spec_df$scientificName)
View(ranEffects)
ranEffects = cbind(ranEffects, as.data.frame(ranEf[[1]][2]))
View(ranEffects)
ranEf[1]
y = unique(spec_df$scientificName)
sort(y)
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
#spectra = normalize(spectra)
#4 scans per individual cannot be treated as independent in a linear model, so
#I'm taking the mean per individual
#spectra = aggregate(spectra, by = meta(spectra)$X, mean, try_keep_txt(mean))
spec_df = as.data.frame(spectra)
ranEffects = as.data.frame(matrix(nrow = 29))
rownames(ranEffects) = sort(unique(spec_df$scientificName))
int_r2_list = c()
slope_r2_list = c()
age_effect_list = c()
age_97.5_list = c()
age_2.5_list = c()
for(i in seq(400, 2400, 1)) {
x = toString(i)
lmm = lmer(spec_df[, x] ~ age + (age|scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')))
ranEf = ranef(lmm)
ranEffects = cbind(ranEffects, as.data.frame(ranEf[[1]][2]))
d = as.data.frame(VarCorr(lmm))
intercept_var = d[1,4]
slope_var = d[2,4]
residual_var = d[4,4]
total_var = sum(intercept_var, slope_var, residual_var)
int_r2 = intercept_var/total_var
int_r2_list = append(int_r2_list, int_r2)
slope_r2 = slope_var/total_var
slope_r2_list = append(slope_r2_list, slope_r2)
age_effect_list = append(age_effect_list, as.numeric(fixef(lmm)[2]))
ci = confint(lmm)
age_2.5_list = append(age_2.5_list, ci[6])
age_97.5_list = append(age_97.5_list, ci[12])
}
stats_list = list()
stats_list = list.append(stats_list, int_r2_list)
stats_list = list.append(stats_list, slope_r2_list)
stats_list = list.append(stats_list, age_effect_list)
stats_list = list.append(stats_list, age_97.5_list)
stats_list = list.append(stats_list, age_2.5_list)
stats_list = list.append(stats_list, ranEffects)
saveRDS(stats_list, 'models/lmm_60yrs.rds')
warnings()
spectra = readRDS('spectra/lichen_spectra.rds')
spectra = spectra[meta(spectra)$age <= 60, ]
spec_df = as.data.frame(spectra)
ranEffects = as.data.frame(matrix(nrow = 29))
rownames(ranEffects) = sort(unique(spec_df$scientificName))
int_r2_list = c()
slope_r2_list = c()
age_effect_list = c()
age_97.5_list = c()
age_2.5_list = c()
lmm = lmer(spec_df[, '701'] ~ age + (age|scientificName), data = spec_df, REML = T,
control = lmerControl(
optimizer ='optimx', optCtrl=list(method='nlminb')))
ranEf = ranef(lmm)
ranEffects = cbind(ranEffects, as.data.frame(ranEf[[1]][2]))
d = as.data.frame(VarCorr(lmm))
intercept_var = d[1,4]
slope_var = d[2,4]
residual_var = d[4,4]
total_var = sum(intercept_var, slope_var, residual_var)
int_r2 = intercept_var/total_var
int_r2_list = append(int_r2_list, int_r2)
slope_r2 = slope_var/total_var
slope_r2_list = append(slope_r2_list, slope_r2)
age_effect_list = append(age_effect_list, as.numeric(fixef(lmm)[2]))
ci = confint(lmm)
?confint
library(plsRbeta)
citation(package = 'plsRbeta')
library(spectrolab)
citation('spectrolab')
library(vegan)
citation('vegan')
citation('base')
971+1998+1359+1435
library(spectrolab)
library(caret)
library(dplyr)
library(mlbench)
library(corrplot)
library(matrixStats)
library(naniar)
library(rlist)
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
cm.total = read.csv('Figures/cm_final/6_scans/cm_Species_ID.csv')
cm.total = cm.total[,-1]
#colnames(cm.total) = c('ESTM', 'WDB', 'BG', 'ESTM', 'MD', 'WD')
rownames(cm.total) = colnames(cm.total)
cm.total = as.matrix(cm.total)
#plot confusion matrix
cols = colorRampPalette(c('#f5f5f5', '#fe9929'))
par(mar = c(1,2,2,1), oma = c(1,1,1,1), mfrow = c(1,1))
corrplot::corrplot(cm.total,
is.corr = F,
method = 'square',
col = cols(10),
addCoef.col = '#542788',
tl.srt = 0,
tl.offset = 1,
number.digits = 3,
tl.cex = 1.2,
cl.cex = 1,
number.cex = 1.5,
tl.col = 'black',
cl.pos = 'n',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addgrid.col = 'grey')
corrplot::corrplot(cm.total,
is.corr = F,
method = 'square',
col = cols(10),
addCoef.col = '#542788',
tl.srt = 0,
tl.offset = 1,
number.digits = 3,
tl.cex = 1.2,
cl.cex = 1,
number.cex = 2,
tl.col = 'black',
cl.pos = 'n',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addgrid.col = 'grey')
cm.total = read.csv('Figures/cm_final/6_scans/GenePop_ID.csv')
cm.total = cm.total[,-1]
#colnames(cm.total) = c('ESTM', 'WDB', 'BG', 'ESTM', 'MD', 'WD')
rownames(cm.total) = colnames(cm.total)
cm.total = as.matrix(cm.total)
#plot confusion matrix
cols = colorRampPalette(c('#f5f5f5', '#fe9929'))
par(mar = c(1,2,2,1), oma = c(1,1,1,1), mfrow = c(1,1))
corrplot::corrplot(cm.total,
is.corr = F,
method = 'square',
col = cols(10),
addCoef.col = '#542788',
tl.srt = 0,
tl.offset = 1,
number.digits = 3,
tl.cex = 1.2,
cl.cex = 1,
number.cex = 2,
tl.col = 'black',
cl.pos = 'n',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addgrid.col = 'grey')
colnames(cm.total) = c('ESTM', 'WDB', 'BG', 'ESTM', 'MD', 'WD')
rownames(cm.total) = colnames(cm.total)
cm.total = as.matrix(cm.total)
cm.total = read.csv('Figures/cm_final/6_scans/GenePop_ID.csv')
cm.total = cm.total[,-1]
colnames(cm.total) = c('ESTM', 'WDB', 'BG', 'ESTM', 'MD', 'WD')
rownames(cm.total) = colnames(cm.total)
cm.total = as.matrix(cm.total)
#plot confusion matrix
cols = colorRampPalette(c('#f5f5f5', '#fe9929'))
par(mar = c(1,2,2,1), oma = c(1,1,1,1), mfrow = c(1,1))
corrplot::corrplot(cm.total,
is.corr = F,
method = 'square',
col = cols(10),
addCoef.col = '#542788',
tl.srt = 0,
tl.offset = 1,
number.digits = 3,
tl.cex = 1.2,
cl.cex = 1,
number.cex = 2,
tl.col = 'black',
cl.pos = 'n',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addgrid.col = 'grey')
rownames(cm.total) = c('ESTM', 'WDB', 'BG', 'ESTM', 'MD', 'WD')
cm.total = as.matrix(cm.total)
cm.total = read.csv('Figures/cm_final/6_scans/GenePop_ID.csv')
cm.total = cm.total[,-1]
colnames(cm.total) = c('ESTM', 'WDB', 'BG', 'ESTM', 'MD', 'WD')
rownames(cm.total) = c('ESTM', 'WDB', 'BG', 'ESTM', 'MD', 'WD')
cm.total = as.matrix(cm.total)
#plot confusion matrix
cols = colorRampPalette(c('#f5f5f5', '#fe9929'))
par(mar = c(1,2,2,1), oma = c(1,1,1,1), mfrow = c(1,1))
corrplot::corrplot(cm.total,
is.corr = F,
method = 'square',
col = cols(10),
addCoef.col = '#542788',
tl.srt = 0,
tl.offset = 1,
number.digits = 3,
tl.cex = 1.2,
cl.cex = 1,
number.cex = 2,
tl.col = 'black',
cl.pos = 'n',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addgrid.col = 'grey')
write.csv(cm.total, "Figures/cm_final/6_scans/GenePop_ID.csv")
#plot confusion matrix
cols = colorRampPalette(c('#f5f5f5', '#fe9929'))
par(mar = c(1,2,2,1), oma = c(1,1,3,1))
corrplot::corrplot(cm.total,
is.corr = T,
method = 'square',
col = cols(10),
addCoef.col = '#542788',
tl.srt = 0,
tl.offset = 1,
number.digits = 2,
tl.cex = 1.2,
cl.cex = 1,
number.cex = 1.5,
tl.col = 'black',
cl.pos = 'n',
na.label = 'square',
na.label.col = 'white',
addgrid.col = 'grey')
cm.total = read.csv('Figures/cm_final/6_scans/GenePop_ID.csv')
cm.total = cm.total[,-1]
cm.total = as.matrix(cm.total)
colnames(cm.total) = c('ESTM', 'WDB', 'BG', 'ESTM', 'MD', 'WD')
rownames(cm.total) = c('ESTM', 'WDB', 'BG', 'ESTM', 'MD', 'WD')
cm.total = as.matrix(cm.total)
cols = colorRampPalette(c('#f5f5f5', '#fe9929'))
par(mar = c(1,2,2,1), oma = c(1,1,1,1), mfrow = c(1,1))
corrplot::corrplot(cm.total,
is.corr = F,
method = 'square',
col = cols(10),
addCoef.col = '#542788',
tl.srt = 0,
tl.offset = 1,
number.digits = 3,
tl.cex = 1.2,
cl.cex = 1,
number.cex = 2,
tl.col = 'black',
cl.pos = 'n',
cl.lim = c(0,1),
na.label = 'square',
na.label.col = 'white',
addgrid.col = 'grey')
library("spectrolab")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
#Just mean reflectance
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec_all = readRDS("Clean-up/Clean_spectra/clean_all_6scans.rds")
ala = spec_all[meta(spec_all)$Species_ID == "DA",]
oct = spec_all[meta(spec_all)$Species_ID == "DO",]
hyb = spec_all[meta(spec_all)$Species_ID == "DX",]
dev.new(width = 6, height = 6, unit = 'in')
plot(mean(ala), lwd = 2, lty = 1, col = "#00B0F6",
main = "Mean reflectance per species", cex.lab = 1.5, ylim = c(0, .85),
ylab = "Reflectance", xlab = "Wavelength (nm)")
plot(mean(oct), lwd = 2, lty = 1, col = "#F8766D", add = T)
plot(mean(hyb), lwd = 2, lty = 1, col = "black", add = T)
legend('bottomright', inset = .02, legend = c("DAK", "DAJ", "DX"),
col = c("#00B0F6", "#F8766D", "black"), lty = 1, lwd = 2, cex =.8,
bg = "white")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec_all = readRDS("Clean-up/Clean_spectra/clean_all_6scans.rds")
ala = spec_all[meta(spec_all)$Species_ID == "DA",]
oct = spec_all[meta(spec_all)$Species_ID == "DO",]
hyb = spec_all[meta(spec_all)$Species_ID == "DX",]
dev.new(width = 10, height = 10, unit = 'in')
plot(mean(ala), lwd = 2, lty = 1, col = "#00B0F6",
main = "Mean reflectance per species", cex.lab = 2, ylim = c(0, .85),
ylab = "Reflectance", xlab = "Wavelength (nm)")
plot(mean(oct), lwd = 2, lty = 1, col = "#F8766D", add = T)
plot(mean(hyb), lwd = 2, lty = 1, col = "black", add = T)
legend('bottomright', inset = .02, legend = c("DAK", "DAJ", "DX"),
col = c("#00B0F6", "#F8766D", "black"), lty = 1, lwd = 2, cex =1.5,
bg = "white")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec_all = readRDS("Clean-up/Clean_spectra/clean_all_6scans.rds")
ala = spec_all[meta(spec_all)$Species_ID == "DA",]
oct = spec_all[meta(spec_all)$Species_ID == "DO",]
hyb = spec_all[meta(spec_all)$Species_ID == "DX",]
dev.new(width = 10, height = 10, unit = 'in')
plot(mean(ala), lwd = 2, lty = 1, col = "#00B0F6",
main = "Mean reflectance per species", cex = 1.5,  ylim = c(0, .85),
ylab = "Reflectance", xlab = "Wavelength (nm)")
plot(mean(oct), lwd = 2, lty = 1, col = "#F8766D", add = T)
plot(mean(hyb), lwd = 2, lty = 1, col = "black", add = T)
legend('bottomright', inset = .02, legend = c("DAK", "DAJ", "DX"),
col = c("#00B0F6", "#F8766D", "black"), lty = 1, lwd = 2, cex =1.5,
bg = "white")
dev.new(width = 10, height = 10, unit = 'in')
plot(mean(ala), lwd = 2, lty = 1, col = "#00B0F6",
main = "Mean reflectance per species", cex = 1.5, cex.lab = 1.5,  ylim = c(0, .85),
ylab = "Reflectance", xlab = "Wavelength (nm)")
plot(mean(oct), lwd = 2, lty = 1, col = "#F8766D", add = T)
plot(mean(hyb), lwd = 2, lty = 1, col = "black", add = T)
legend('bottomright', inset = .02, legend = c("DAK", "DAJ", "DX"),
col = c("#00B0F6", "#F8766D", "black"), lty = 1, lwd = 2, cex =1.5,
bg = "white")
dev.new(width = 10, height = 10, unit = 'in')
plot(mean(ala), lwd = 2, lty = 1, col = "#00B0F6",
main = "Mean reflectance per species", cex.main = 1.5, cex.lab = 1.5,  ylim = c(0, .85),
ylab = "Reflectance", xlab = "Wavelength (nm)")
plot(mean(oct), lwd = 2, lty = 1, col = "#F8766D", add = T)
plot(mean(hyb), lwd = 2, lty = 1, col = "black", add = T)
legend('bottomright', inset = .02, legend = c("DAK", "DAJ", "DX"),
col = c("#00B0F6", "#F8766D", "black"), lty = 1, lwd = 2, cex =1.5,
bg = "white")
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec_all = readRDS("Clean-up/Clean_spectra/clean_all_6scans.rds")
#s.m = as_spectra(as.matrix(spec_all))
#meta(s.m) = read.csv('metadata_2.csv', stringsAsFactors = F)
#spec_all = s.m
da_et = spec_all[meta(spec_all)$GenePop_ID == "DA_et",]
da_wd = spec_all[meta(spec_all)$GenePop_ID == 'DA_wdb']
et = spec_all[meta(spec_all)$GenePop_ID == "DO_et",]
wd = spec_all[meta(spec_all)$GenePop_ID == "DO_wd",]
mdb = spec_all[meta(spec_all)$GenePop_ID == "DO_mdb",]
bg = spec_all[meta(spec_all)$GenePop_ID == "DO_bgc",]
dev.new(width = 10, height = 10, unit = 'in')
plot(mean(da_et), lwd = 2, lty = 1, col = "#a6cee3",
cex.lab = 1.5, cex.main = 1.5, ylim = c(0, .85), ylab = "Reflectance",
xlab = 'Wavelength (nm)', main = "Mean reflecatnce per population")
plot(mean(da_wd), lwd = 2, lty = 1, col = "#b2df8a", add = T)
plot(mean(et), lwd = 2, lty = 1, col = "#fb9a99", add = T)
plot(mean(wd), lwd = 2, lty = 1, col = "#ff7f00", add = T)
plot(mean(mdb), lwd = 2, lty = 1, col = "#e31a1c", add = T)
plot(mean(bg), lwd = 2, lty = 1, col = "#33a02c", add = T)
legend('bottomright',inset = .02,
legend=c('DAK ES-TM', 'DAK WDB', 'DAJ BG', 'DAJ ES-TM', 'DAJ MD', 'DAJ WD'),
col=c("#a6cee3",'#b2df8a', "#33a02c", "#fb9a99", "#e31a1c", "#ff7f00"),
lty=1, lwd = 2, cex=1.5, bg = 'white')
dev.new(width = 10, height = 10, unit = 'in')
plot(mean(da_et), lwd = 2, lty = 1, col = "#a6cee3",
cex.lab = 1.5, cex.main = 1.5, ylim = c(0, .85), ylab = "Reflectance",
xlab = 'Wavelength (nm)', main = "Mean reflecatnce per population")
plot(mean(da_wd), lwd = 2, lty = 1, col = "#b2df8a", add = T)
plot(mean(et), lwd = 2, lty = 1, col = "#fb9a99", add = T)
plot(mean(wd), lwd = 2, lty = 1, col = "#ff7f00", add = T)
plot(mean(mdb), lwd = 2, lty = 1, col = "#e31a1c", add = T)
plot(mean(bg), lwd = 2, lty = 1, col = "#33a02c", add = T)
legend('bottomright',inset = .02,
legend=c('DAK ES-TM', 'DAK WDB', 'DAJ BG', 'DAJ ES-TM', 'DAJ MD', 'DAJ WD'),
col=c("#a6cee3",'#b2df8a', "#33a02c", "#fb9a99", "#e31a1c", "#ff7f00"),
lty=1, lwd = 2, cex=1.1, bg = 'white')
dev.new(width = 10, height = 10, unit = 'in')
plot(mean(da_et), lwd = 2, lty = 1, col = "#a6cee3",
cex.lab = 2, cex.main = 1.5, ylim = c(0, .85), ylab = "Reflectance",
xlab = 'Wavelength (nm)', main = "Mean reflecatnce per population")
plot(mean(da_wd), lwd = 2, lty = 1, col = "#b2df8a", add = T)
plot(mean(et), lwd = 2, lty = 1, col = "#fb9a99", add = T)
plot(mean(wd), lwd = 2, lty = 1, col = "#ff7f00", add = T)
plot(mean(mdb), lwd = 2, lty = 1, col = "#e31a1c", add = T)
plot(mean(bg), lwd = 2, lty = 1, col = "#33a02c", add = T)
legend('bottomright',inset = .02,
legend=c('DAK ES-TM', 'DAK WDB', 'DAJ BG', 'DAJ ES-TM', 'DAJ MD', 'DAJ WD'),
col=c("#a6cee3",'#b2df8a', "#33a02c", "#fb9a99", "#e31a1c", "#ff7f00"),
lty=1, lwd = 2, cex=1.1, bg = 'white')
dev.new(width = 10, height = 10, unit = 'in')
plot(mean(da_et), lwd = 2, lty = 1, col = "#a6cee3",
cex.lab = 2, cex.main = 1.5, ylim = c(0, .85), ylab = "",
xlab = '', main = "")
plot(mean(da_wd), lwd = 2, lty = 1, col = "#b2df8a", add = T)
plot(mean(et), lwd = 2, lty = 1, col = "#fb9a99", add = T)
plot(mean(wd), lwd = 2, lty = 1, col = "#ff7f00", add = T)
plot(mean(mdb), lwd = 2, lty = 1, col = "#e31a1c", add = T)
plot(mean(bg), lwd = 2, lty = 1, col = "#33a02c", add = T)
legend('bottomright',inset = .02,
legend=c('DAK ES-TM', 'DAK WDB', 'DAJ BG', 'DAJ ES-TM', 'DAJ MD', 'DAJ WD'),
col=c("#a6cee3",'#b2df8a', "#33a02c", "#fb9a99", "#e31a1c", "#ff7f00"),
lty=1, lwd = 2, cex=1.1, bg = 'white')
setwd("C:/Users/istas/OneDrive/Documents/Dryas Research/Dryas 2.0")
spec_all = readRDS("Clean-up/Clean_spectra/clean_all_6scans.rds")
ala = spec_all[meta(spec_all)$Species_ID == "DA",]
oct = spec_all[meta(spec_all)$Species_ID == "DO",]
hyb = spec_all[meta(spec_all)$Species_ID == "DX",]
dev.new(width = 10, height = 10, unit = 'in')
plot(mean(ala), lwd = 2, lty = 1, col = "#00B0F6",
main = "", cex.main = 1.5, cex.lab = 1.5,  ylim = c(0, .85),
ylab = "", xlab = "")
plot(mean(oct), lwd = 2, lty = 1, col = "#F8766D", add = T)
plot(mean(hyb), lwd = 2, lty = 1, col = "black", add = T)
legend('bottomright', inset = .02, legend = c("DAK", "DAJ", "DX"),
col = c("#00B0F6", "#F8766D", "black"), lty = 1, lwd = 2, cex =1.1,
bg = "white")
